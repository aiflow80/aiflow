{"version":3,"file":"static/js/587.64895fc1.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/internal/svg-icons/Person.js","../node_modules/@mui/material/Avatar/Avatar.js","../node_modules/@mui/material/Avatar/avatarClasses.js","../node_modules/@mui/material/SvgIcon/SvgIcon.js","../node_modules/@mui/material/SvgIcon/svgIconClasses.js","../node_modules/@mui/material/utils/capitalize.js","../node_modules/@mui/material/utils/createSvgIcon.js","../node_modules/@mui/material/utils/useSlot.js","../node_modules/@mui/utils/esm/isHostComponent/isHostComponent.js","../node_modules/@mui/utils/esm/appendOwnerState/appendOwnerState.js","../node_modules/@mui/utils/esm/extractEventHandlers/extractEventHandlers.js","../node_modules/@mui/utils/esm/omitEventHandlers/omitEventHandlers.js","../node_modules/@mui/utils/esm/mergeSlotProps/mergeSlotProps.js","../node_modules/@mui/utils/esm/resolveComponentProps/resolveComponentProps.js","../node_modules/@mui/utils/esm/setRef/setRef.js","../node_modules/@mui/utils/esm/useForkRef/useForkRef.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Person from \"../internal/svg-icons/Person.js\";\nimport { getAvatarUtilityClass } from \"./avatarClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    colorDefault\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, colorDefault && 'colorDefault'],\n    img: ['img'],\n    fallback: ['fallback']\n  };\n  return composeClasses(slots, getAvatarUtilityClass, classes);\n};\nconst AvatarRoot = styled('div', {\n  name: 'MuiAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.colorDefault && styles.colorDefault];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexShrink: 0,\n  width: 40,\n  height: 40,\n  fontFamily: theme.typography.fontFamily,\n  fontSize: theme.typography.pxToRem(20),\n  lineHeight: 1,\n  borderRadius: '50%',\n  overflow: 'hidden',\n  userSelect: 'none',\n  variants: [{\n    props: {\n      variant: 'rounded'\n    },\n    style: {\n      borderRadius: (theme.vars || theme).shape.borderRadius\n    }\n  }, {\n    props: {\n      variant: 'square'\n    },\n    style: {\n      borderRadius: 0\n    }\n  }, {\n    props: {\n      colorDefault: true\n    },\n    style: {\n      color: (theme.vars || theme).palette.background.default,\n      ...(theme.vars ? {\n        backgroundColor: theme.vars.palette.Avatar.defaultBg\n      } : {\n        backgroundColor: theme.palette.grey[400],\n        ...theme.applyStyles('dark', {\n          backgroundColor: theme.palette.grey[600]\n        })\n      })\n    }\n  }]\n})));\nconst AvatarImg = styled('img', {\n  name: 'MuiAvatar',\n  slot: 'Img',\n  overridesResolver: (props, styles) => styles.img\n})({\n  width: '100%',\n  height: '100%',\n  textAlign: 'center',\n  // Handle non-square image.\n  objectFit: 'cover',\n  // Hide alt text.\n  color: 'transparent',\n  // Hide the image broken icon, only works on Chrome.\n  textIndent: 10000\n});\nconst AvatarFallback = styled(Person, {\n  name: 'MuiAvatar',\n  slot: 'Fallback',\n  overridesResolver: (props, styles) => styles.fallback\n})({\n  width: '75%',\n  height: '75%'\n});\nfunction useLoaded({\n  crossOrigin,\n  referrerPolicy,\n  src,\n  srcSet\n}) {\n  const [loaded, setLoaded] = React.useState(false);\n  React.useEffect(() => {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n    setLoaded(false);\n    let active = true;\n    const image = new Image();\n    image.onload = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('loaded');\n    };\n    image.onerror = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('error');\n    };\n    image.crossOrigin = crossOrigin;\n    image.referrerPolicy = referrerPolicy;\n    image.src = src;\n    if (srcSet) {\n      image.srcset = srcSet;\n    }\n    return () => {\n      active = false;\n    };\n  }, [crossOrigin, referrerPolicy, src, srcSet]);\n  return loaded;\n}\nconst Avatar = /*#__PURE__*/React.forwardRef(function Avatar(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAvatar'\n  });\n  const {\n    alt,\n    children: childrenProp,\n    className,\n    component = 'div',\n    slots = {},\n    slotProps = {},\n    imgProps,\n    sizes,\n    src,\n    srcSet,\n    variant = 'circular',\n    ...other\n  } = props;\n  let children = null;\n  const ownerState = {\n    ...props,\n    component,\n    variant\n  };\n\n  // Use a hook instead of onError on the img element to support server-side rendering.\n  const loaded = useLoaded({\n    ...imgProps,\n    ...(typeof slotProps.img === 'function' ? slotProps.img(ownerState) : slotProps.img),\n    src,\n    srcSet\n  });\n  const hasImg = src || srcSet;\n  const hasImgNotFailing = hasImg && loaded !== 'error';\n  ownerState.colorDefault = !hasImgNotFailing;\n  // This issue explains why this is required: https://github.com/mui/material-ui/issues/42184\n  delete ownerState.ownerState;\n  const classes = useUtilityClasses(ownerState);\n  const [ImgSlot, imgSlotProps] = useSlot('img', {\n    className: classes.img,\n    elementType: AvatarImg,\n    externalForwardedProps: {\n      slots,\n      slotProps: {\n        img: {\n          ...imgProps,\n          ...slotProps.img\n        }\n      }\n    },\n    additionalProps: {\n      alt,\n      src,\n      srcSet,\n      sizes\n    },\n    ownerState\n  });\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/_jsx(ImgSlot, {\n      ...imgSlotProps\n    });\n    // We only render valid children, non valid children are rendered with a fallback\n    // We consider that invalid children are all falsy values, except 0, which is valid.\n  } else if (!!childrenProp || childrenProp === 0) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/_jsx(AvatarFallback, {\n      ownerState: ownerState,\n      className: classes.fallback\n    });\n  }\n  return /*#__PURE__*/_jsx(AvatarRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ...other,\n    ownerState: ownerState,\n    children: children\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   * @deprecated Use `slotProps.img` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  imgProps: PropTypes.object,\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    img: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    img: PropTypes.elementType\n  }),\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The shape of the avatar.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default Avatar;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiAvatar', slot);\n}\nconst avatarClasses = generateUtilityClasses('MuiAvatar', ['root', 'colorDefault', 'circular', 'rounded', 'square', 'img', 'fallback']);\nexport default avatarClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from \"../utils/capitalize.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getSvgIconUtilityClass } from \"./svgIconClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    fontSize,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', color !== 'inherit' && `color${capitalize(color)}`, `fontSize${capitalize(fontSize)}`]\n  };\n  return composeClasses(slots, getSvgIconUtilityClass, classes);\n};\nconst SvgIconRoot = styled('svg', {\n  name: 'MuiSvgIcon',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'inherit' && styles[`color${capitalize(ownerState.color)}`], styles[`fontSize${capitalize(ownerState.fontSize)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  userSelect: 'none',\n  width: '1em',\n  height: '1em',\n  display: 'inline-block',\n  flexShrink: 0,\n  transition: theme.transitions?.create?.('fill', {\n    duration: (theme.vars ?? theme).transitions?.duration?.shorter\n  }),\n  variants: [{\n    props: props => !props.hasSvgAsChild,\n    style: {\n      // the <svg> will define the property that has `currentColor`\n      // for example heroicons uses fill=\"none\" and stroke=\"currentColor\"\n      fill: 'currentColor'\n    }\n  }, {\n    props: {\n      fontSize: 'inherit'\n    },\n    style: {\n      fontSize: 'inherit'\n    }\n  }, {\n    props: {\n      fontSize: 'small'\n    },\n    style: {\n      fontSize: theme.typography?.pxToRem?.(20) || '1.25rem'\n    }\n  }, {\n    props: {\n      fontSize: 'medium'\n    },\n    style: {\n      fontSize: theme.typography?.pxToRem?.(24) || '1.5rem'\n    }\n  }, {\n    props: {\n      fontSize: 'large'\n    },\n    style: {\n      fontSize: theme.typography?.pxToRem?.(35) || '2.1875rem'\n    }\n  },\n  // TODO v5 deprecate color prop, v6 remove for sx\n  ...Object.entries((theme.vars ?? theme).palette).filter(([, value]) => value && value.main).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      color: (theme.vars ?? theme).palette?.[color]?.main\n    }\n  })), {\n    props: {\n      color: 'action'\n    },\n    style: {\n      color: (theme.vars ?? theme).palette?.action?.active\n    }\n  }, {\n    props: {\n      color: 'disabled'\n    },\n    style: {\n      color: (theme.vars ?? theme).palette?.action?.disabled\n    }\n  }, {\n    props: {\n      color: 'inherit'\n    },\n    style: {\n      color: undefined\n    }\n  }]\n})));\nconst SvgIcon = /*#__PURE__*/React.forwardRef(function SvgIcon(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiSvgIcon'\n  });\n  const {\n    children,\n    className,\n    color = 'inherit',\n    component = 'svg',\n    fontSize = 'medium',\n    htmlColor,\n    inheritViewBox = false,\n    titleAccess,\n    viewBox = '0 0 24 24',\n    ...other\n  } = props;\n  const hasSvgAsChild = /*#__PURE__*/React.isValidElement(children) && children.type === 'svg';\n  const ownerState = {\n    ...props,\n    color,\n    component,\n    fontSize,\n    instanceFontSize: inProps.fontSize,\n    inheritViewBox,\n    viewBox,\n    hasSvgAsChild\n  };\n  const more = {};\n  if (!inheritViewBox) {\n    more.viewBox = viewBox;\n  }\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SvgIconRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    focusable: \"false\",\n    color: htmlColor,\n    \"aria-hidden\": titleAccess ? undefined : true,\n    role: titleAccess ? 'img' : undefined,\n    ref: ref,\n    ...more,\n    ...other,\n    ...(hasSvgAsChild && children.props),\n    ownerState: ownerState,\n    children: [hasSvgAsChild ? children.props.children : children, titleAccess ? /*#__PURE__*/_jsx(\"title\", {\n      children: titleAccess\n    }) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SvgIcon.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Node passed into the SVG element.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.\n   * @default 'inherit'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'action', 'disabled', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   * @default 'medium'\n   */\n  fontSize: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'large', 'medium', 'small']), PropTypes.string]),\n  /**\n   * Applies a color attribute to the SVG element.\n   */\n  htmlColor: PropTypes.string,\n  /**\n   * If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`\n   * prop will be ignored.\n   * Useful when you want to reference a custom `component` and have `SvgIcon` pass that\n   * `component`'s viewBox to the root node.\n   * @default false\n   */\n  inheritViewBox: PropTypes.bool,\n  /**\n   * The shape-rendering attribute. The behavior of the different options is described on the\n   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).\n   * If you are having issues with blurry icons you should investigate this prop.\n   */\n  shapeRendering: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Provides a human-readable title for the element that contains it.\n   * https://www.w3.org/TR/SVG-access/#Equivalent\n   */\n  titleAccess: PropTypes.string,\n  /**\n   * Allows you to redefine what the coordinates without units mean inside an SVG element.\n   * For example, if the SVG element is 500 (width) by 200 (height),\n   * and you pass viewBox=\"0 0 50 20\",\n   * this means that the coordinates inside the SVG will go from the top left corner (0,0)\n   * to bottom right (50,20) and each unit will be worth 10px.\n   * @default '0 0 24 24'\n   */\n  viewBox: PropTypes.string\n} : void 0;\nSvgIcon.muiName = 'SvgIcon';\nexport default SvgIcon;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSvgIconUtilityClass(slot) {\n  return generateUtilityClass('MuiSvgIcon', slot);\n}\nconst svgIconClasses = generateUtilityClasses('MuiSvgIcon', ['root', 'colorPrimary', 'colorSecondary', 'colorAction', 'colorError', 'colorDisabled', 'fontSizeInherit', 'fontSizeSmall', 'fontSizeMedium', 'fontSizeLarge']);\nexport default svgIconClasses;","import capitalize from '@mui/utils/capitalize';\nexport default capitalize;","'use client';\n\nimport * as React from 'react';\nimport SvgIcon from \"../SvgIcon/index.js\";\n\n/**\n * Private module reserved for @mui packages.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createSvgIcon(path, displayName) {\n  function Component(props, ref) {\n    return /*#__PURE__*/_jsx(SvgIcon, {\n      \"data-testid\": `${displayName}Icon`,\n      ref: ref,\n      ...props,\n      children: path\n    });\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // Need to set `displayName` on the inner component for React.memo.\n    // React prior to 16.14 ignores `displayName` on the wrapper.\n    Component.displayName = `${displayName}Icon`;\n  }\n  Component.muiName = SvgIcon.muiName;\n  return /*#__PURE__*/React.memo(/*#__PURE__*/React.forwardRef(Component));\n}","'use client';\n\nimport useForkRef from '@mui/utils/useForkRef';\nimport appendOwnerState from '@mui/utils/appendOwnerState';\nimport resolveComponentProps from '@mui/utils/resolveComponentProps';\nimport mergeSlotProps from '@mui/utils/mergeSlotProps';\n/**\n * An internal function to create a Material UI slot.\n *\n * This is an advanced version of Base UI `useSlotProps` because Material UI allows leaf component to be customized via `component` prop\n * while Base UI does not need to support leaf component customization.\n *\n * @param {string} name: name of the slot\n * @param {object} parameters\n * @returns {[Slot, slotProps]} The slot's React component and the slot's props\n *\n * Note: the returned slot's props\n * - will never contain `component` prop.\n * - might contain `as` prop.\n */\nexport default function useSlot(\n/**\n * The slot's name. All Material UI components should have `root` slot.\n *\n * If the name is `root`, the logic behaves differently from other slots,\n * e.g. the `externalForwardedProps` are spread to `root` slot but not other slots.\n */\nname, parameters) {\n  const {\n    className,\n    elementType: initialElementType,\n    ownerState,\n    externalForwardedProps,\n    internalForwardedProps,\n    shouldForwardComponentProp = false,\n    ...useSlotPropsParams\n  } = parameters;\n  const {\n    component: rootComponent,\n    slots = {\n      [name]: undefined\n    },\n    slotProps = {\n      [name]: undefined\n    },\n    ...other\n  } = externalForwardedProps;\n  const elementType = slots[name] || initialElementType;\n\n  // `slotProps[name]` can be a callback that receives the component's ownerState.\n  // `resolvedComponentsProps` is always a plain object.\n  const resolvedComponentsProps = resolveComponentProps(slotProps[name], ownerState);\n  const {\n    props: {\n      component: slotComponent,\n      ...mergedProps\n    },\n    internalRef\n  } = mergeSlotProps({\n    className,\n    ...useSlotPropsParams,\n    externalForwardedProps: name === 'root' ? other : undefined,\n    externalSlotProps: resolvedComponentsProps\n  });\n  const ref = useForkRef(internalRef, resolvedComponentsProps?.ref, parameters.ref);\n  const LeafComponent = name === 'root' ? slotComponent || rootComponent : slotComponent;\n  const props = appendOwnerState(elementType, {\n    ...(name === 'root' && !rootComponent && !slots[name] && internalForwardedProps),\n    ...(name !== 'root' && !slots[name] && internalForwardedProps),\n    ...mergedProps,\n    ...(LeafComponent && !shouldForwardComponentProp && {\n      as: LeafComponent\n    }),\n    ...(LeafComponent && shouldForwardComponentProp && {\n      component: LeafComponent\n    }),\n    ref\n  }, ownerState);\n  return [elementType, props];\n}","/**\n * Determines if a given element is a DOM element name (i.e. not a React component).\n */\nfunction isHostComponent(element) {\n  return typeof element === 'string';\n}\nexport default isHostComponent;","import isHostComponent from \"../isHostComponent/index.js\";\n\n/**\n * Type of the ownerState based on the type of an element it applies to.\n * This resolves to the provided OwnerState for React components and `undefined` for host components.\n * Falls back to `OwnerState | undefined` when the exact type can't be determined in development time.\n */\n\n/**\n * Appends the ownerState object to the props, merging with the existing one if necessary.\n *\n * @param elementType Type of the element that owns the `existingProps`. If the element is a DOM node or undefined, `ownerState` is not applied.\n * @param otherProps Props of the element.\n * @param ownerState\n */\nfunction appendOwnerState(elementType, otherProps, ownerState) {\n  if (elementType === undefined || isHostComponent(elementType)) {\n    return otherProps;\n  }\n  return {\n    ...otherProps,\n    ownerState: {\n      ...otherProps.ownerState,\n      ...ownerState\n    }\n  };\n}\nexport default appendOwnerState;","/**\n * Extracts event handlers from a given object.\n * A prop is considered an event handler if it is a function and its name starts with `on`.\n *\n * @param object An object to extract event handlers from.\n * @param excludeKeys An array of keys to exclude from the returned object.\n */\nfunction extractEventHandlers(object, excludeKeys = []) {\n  if (object === undefined) {\n    return {};\n  }\n  const result = {};\n  Object.keys(object).filter(prop => prop.match(/^on[A-Z]/) && typeof object[prop] === 'function' && !excludeKeys.includes(prop)).forEach(prop => {\n    result[prop] = object[prop];\n  });\n  return result;\n}\nexport default extractEventHandlers;","/**\n * Removes event handlers from the given object.\n * A field is considered an event handler if it is a function with a name beginning with `on`.\n *\n * @param object Object to remove event handlers from.\n * @returns Object with event handlers removed.\n */\nfunction omitEventHandlers(object) {\n  if (object === undefined) {\n    return {};\n  }\n  const result = {};\n  Object.keys(object).filter(prop => !(prop.match(/^on[A-Z]/) && typeof object[prop] === 'function')).forEach(prop => {\n    result[prop] = object[prop];\n  });\n  return result;\n}\nexport default omitEventHandlers;","import clsx from 'clsx';\nimport extractEventHandlers from \"../extractEventHandlers/index.js\";\nimport omitEventHandlers from \"../omitEventHandlers/index.js\";\n/**\n * Merges the slot component internal props (usually coming from a hook)\n * with the externally provided ones.\n *\n * The merge order is (the latter overrides the former):\n * 1. The internal props (specified as a getter function to work with get*Props hook result)\n * 2. Additional props (specified internally on a Base UI component)\n * 3. External props specified on the owner component. These should only be used on a root slot.\n * 4. External props specified in the `slotProps.*` prop.\n * 5. The `className` prop - combined from all the above.\n * @param parameters\n * @returns\n */\nfunction mergeSlotProps(parameters) {\n  const {\n    getSlotProps,\n    additionalProps,\n    externalSlotProps,\n    externalForwardedProps,\n    className\n  } = parameters;\n  if (!getSlotProps) {\n    // The simpler case - getSlotProps is not defined, so no internal event handlers are defined,\n    // so we can simply merge all the props without having to worry about extracting event handlers.\n    const joinedClasses = clsx(additionalProps?.className, className, externalForwardedProps?.className, externalSlotProps?.className);\n    const mergedStyle = {\n      ...additionalProps?.style,\n      ...externalForwardedProps?.style,\n      ...externalSlotProps?.style\n    };\n    const props = {\n      ...additionalProps,\n      ...externalForwardedProps,\n      ...externalSlotProps\n    };\n    if (joinedClasses.length > 0) {\n      props.className = joinedClasses;\n    }\n    if (Object.keys(mergedStyle).length > 0) {\n      props.style = mergedStyle;\n    }\n    return {\n      props,\n      internalRef: undefined\n    };\n  }\n\n  // In this case, getSlotProps is responsible for calling the external event handlers.\n  // We don't need to include them in the merged props because of this.\n\n  const eventHandlers = extractEventHandlers({\n    ...externalForwardedProps,\n    ...externalSlotProps\n  });\n  const componentsPropsWithoutEventHandlers = omitEventHandlers(externalSlotProps);\n  const otherPropsWithoutEventHandlers = omitEventHandlers(externalForwardedProps);\n  const internalSlotProps = getSlotProps(eventHandlers);\n\n  // The order of classes is important here.\n  // Emotion (that we use in libraries consuming Base UI) depends on this order\n  // to properly override style. It requires the most important classes to be last\n  // (see https://github.com/mui/material-ui/pull/33205) for the related discussion.\n  const joinedClasses = clsx(internalSlotProps?.className, additionalProps?.className, className, externalForwardedProps?.className, externalSlotProps?.className);\n  const mergedStyle = {\n    ...internalSlotProps?.style,\n    ...additionalProps?.style,\n    ...externalForwardedProps?.style,\n    ...externalSlotProps?.style\n  };\n  const props = {\n    ...internalSlotProps,\n    ...additionalProps,\n    ...otherPropsWithoutEventHandlers,\n    ...componentsPropsWithoutEventHandlers\n  };\n  if (joinedClasses.length > 0) {\n    props.className = joinedClasses;\n  }\n  if (Object.keys(mergedStyle).length > 0) {\n    props.style = mergedStyle;\n  }\n  return {\n    props,\n    internalRef: internalSlotProps.ref\n  };\n}\nexport default mergeSlotProps;","/**\n * If `componentProps` is a function, calls it with the provided `ownerState`.\n * Otherwise, just returns `componentProps`.\n */\nfunction resolveComponentProps(componentProps, ownerState, slotState) {\n  if (typeof componentProps === 'function') {\n    return componentProps(ownerState, slotState);\n  }\n  return componentProps;\n}\nexport default resolveComponentProps;","/**\n * TODO v5: consider making it private\n *\n * passes {value} to {ref}\n *\n * WARNING: Be sure to only call this inside a callback that is passed as a ref.\n * Otherwise, make sure to cleanup the previous {ref} if it changes. See\n * https://github.com/mui/material-ui/issues/13539\n *\n * Useful if you want to expose the ref of an inner component to the public API\n * while still using it inside the component.\n * @param ref A ref callback or ref object. If anything falsy, this is a no-op.\n */\nexport default function setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}","'use client';\n\nimport * as React from 'react';\nimport setRef from \"../setRef/index.js\";\n\n/**\n * Takes an array of refs and returns a new ref which will apply any modification to all of the refs.\n * This is useful when you want to have the ref used in multiple places.\n *\n * ```tsx\n * const rootRef = React.useRef<Instance>(null);\n * const refFork = useForkRef(rootRef, props.ref);\n *\n * return (\n *   <Root {...props} ref={refFork} />\n * );\n * ```\n *\n * @param {Array<React.Ref<Instance> | undefined>} refs The ref array.\n * @returns {React.RefCallback<Instance> | null} The new ref callback.\n */\nexport default function useForkRef(...refs) {\n  /**\n   * This will create a new function if the refs passed to this hook change and are all defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior.\n   */\n  return React.useMemo(() => {\n    if (refs.every(ref => ref == null)) {\n      return null;\n    }\n    return instance => {\n      refs.forEach(ref => {\n        setRef(ref, instance);\n      });\n    };\n    // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- intentionally ignoring that the dependency array must be an array literal\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}"],"names":["createSvgIcon","_jsx","d","_excluded","AvatarRoot","styled","name","slot","overridesResolver","props","styles","ownerState","root","variant","colorDefault","memoTheme","_ref","theme","position","display","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","variants","style","vars","shape","_objectSpread","color","palette","background","default","backgroundColor","Avatar","defaultBg","grey","applyStyles","AvatarImg","img","textAlign","objectFit","textIndent","AvatarFallback","Person","fallback","React","inProps","ref","useDefaultProps","alt","children","childrenProp","className","component","slots","slotProps","imgProps","sizes","src","srcSet","other","_objectWithoutProperties","loaded","_ref2","crossOrigin","referrerPolicy","setLoaded","active","image","Image","onload","onerror","srcset","useLoaded","hasImg","hasImgNotFailing","classes","composeClasses","getAvatarUtilityClass","useUtilityClasses","ImgSlot","imgSlotProps","useSlot","elementType","externalForwardedProps","additionalProps","as","clsx","generateUtilityClass","generateUtilityClasses","SvgIconRoot","concat","capitalize","_theme$transitions","_theme$transitions$cr","_transitions","_theme$vars","_theme$typography","_theme$typography$pxT","_theme$typography2","_theme$typography2$px","_theme$typography3","_theme$typography3$px","_theme$vars2","_palette2","_theme$vars4","_palette3","_theme$vars5","transition","transitions","create","call","duration","shorter","hasSvgAsChild","fill","Object","entries","filter","value","main","map","_ref3","_palette","_theme$vars3","action","disabled","undefined","SvgIcon","htmlColor","inheritViewBox","titleAccess","viewBox","type","instanceFontSize","more","getSvgIconUtilityClass","_jsxs","focusable","role","muiName","path","displayName","Component","_excluded2","_excluded3","parameters","initialElementType","internalForwardedProps","shouldForwardComponentProp","useSlotPropsParams","rootComponent","resolvedComponentsProps","resolveComponentProps","_mergeSlotProps","mergeSlotProps","externalSlotProps","slotComponent","internalRef","mergedProps","useForkRef","LeafComponent","appendOwnerState","element","otherProps","isHostComponent","object","excludeKeys","arguments","length","result","keys","prop","match","includes","forEach","getSlotProps","joinedClasses","mergedStyle","eventHandlers","extractEventHandlers","componentsPropsWithoutEventHandlers","omitEventHandlers","otherPropsWithoutEventHandlers","internalSlotProps","componentProps","slotState","setRef","current","_len","refs","Array","_key","every","instance"],"sourceRoot":""}