{"version":3,"file":"static/js/9980.1b2c3d78.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/AlertTitle/AlertTitle.js","../node_modules/@mui/material/AlertTitle/alertTitleClasses.js","../node_modules/@mui/material/Typography/Typography.js","../node_modules/@mui/material/Typography/typographyClasses.js","../node_modules/@mui/material/utils/capitalize.js","../node_modules/@mui/material/utils/createSimplePaletteValueFilter.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Typography from \"../Typography/index.js\";\nimport { getAlertTitleUtilityClass } from \"./alertTitleClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getAlertTitleUtilityClass, classes);\n};\nconst AlertTitleRoot = styled(Typography, {\n  name: 'MuiAlertTitle',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(memoTheme(({\n  theme\n}) => {\n  return {\n    fontWeight: theme.typography.fontWeightMedium,\n    marginTop: -2\n  };\n}));\nconst AlertTitle = /*#__PURE__*/React.forwardRef(function AlertTitle(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAlertTitle'\n  });\n  const {\n    className,\n    ...other\n  } = props;\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(AlertTitleRoot, {\n    gutterBottom: true,\n    component: \"div\",\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? AlertTitle.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AlertTitle;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAlertTitleUtilityClass(slot) {\n  return generateUtilityClass('MuiAlertTitle', slot);\n}\nconst alertTitleClasses = generateUtilityClasses('MuiAlertTitle', ['root']);\nexport default alertTitleClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled, internal_createExtendSxProp } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { getTypographyUtilityClass } from \"./typographyClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst v6Colors = {\n  primary: true,\n  secondary: true,\n  error: true,\n  info: true,\n  success: true,\n  warning: true,\n  textPrimary: true,\n  textSecondary: true,\n  textDisabled: true\n};\nconst extendSxProp = internal_createExtendSxProp();\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  margin: 0,\n  variants: [{\n    props: {\n      variant: 'inherit'\n    },\n    style: {\n      // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.\n      font: 'inherit',\n      lineHeight: 'inherit',\n      letterSpacing: 'inherit'\n    }\n  }, ...Object.entries(theme.typography).filter(([variant, value]) => variant !== 'inherit' && value && typeof value === 'object').map(([variant, value]) => ({\n    props: {\n      variant\n    },\n    style: value\n  })), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      color: (theme.vars || theme).palette[color].main\n    }\n  })), ...Object.entries(theme.palette?.text || {}).filter(([, value]) => typeof value === 'string').map(([color]) => ({\n    props: {\n      color: `text${capitalize(color)}`\n    },\n    style: {\n      color: (theme.vars || theme).palette.text[color]\n    }\n  })), {\n    props: ({\n      ownerState\n    }) => ownerState.align !== 'inherit',\n    style: {\n      textAlign: 'var(--Typography-textAlign)'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.noWrap,\n    style: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.gutterBottom,\n    style: {\n      marginBottom: '0.35em'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.paragraph,\n    style: {\n      marginBottom: 16\n    }\n  }]\n})));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n};\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const {\n    color,\n    ...themeProps\n  } = useDefaultProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const isSxColor = !v6Colors[color];\n  // TODO: Remove `extendSxProp` in v7\n  const props = extendSxProp({\n    ...themeProps,\n    ...(isSxColor && {\n      color\n    })\n  });\n  const {\n    align = 'inherit',\n    className,\n    component,\n    gutterBottom = false,\n    noWrap = false,\n    paragraph = false,\n    variant = 'body1',\n    variantMapping = defaultVariantMapping,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  };\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, {\n    as: Component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ...other,\n    ownerState: ownerState,\n    style: {\n      ...(align !== 'inherit' && {\n        '--Typography-textAlign': align\n      }),\n      ...other.style\n    }\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary', 'success', 'error', 'info', 'warning', 'textPrimary', 'textSecondary', 'textDisabled']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   * @deprecated Use the `component` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  paragraph: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes /* @typescript-to-proptypes-ignore */.object\n} : void 0;\nexport default Typography;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","import capitalize from '@mui/utils/capitalize';\nexport default capitalize;","/**\n * Type guard to check if the object has a \"main\" property of type string.\n *\n * @param obj - the object to check\n * @returns boolean\n */\nfunction hasCorrectMainProperty(obj) {\n  return typeof obj.main === 'string';\n}\n/**\n * Checks if the object conforms to the SimplePaletteColorOptions type.\n * The minimum requirement is that the object has a \"main\" property of type string, this is always checked.\n * Optionally, you can pass additional properties to check.\n *\n * @param obj - The object to check\n * @param additionalPropertiesToCheck - Array containing \"light\", \"dark\", and/or \"contrastText\"\n * @returns boolean\n */\nfunction checkSimplePaletteColorValues(obj, additionalPropertiesToCheck = []) {\n  if (!hasCorrectMainProperty(obj)) {\n    return false;\n  }\n  for (const value of additionalPropertiesToCheck) {\n    if (!obj.hasOwnProperty(value) || typeof obj[value] !== 'string') {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Creates a filter function used to filter simple palette color options.\n * The minimum requirement is that the object has a \"main\" property of type string, this is always checked.\n * Optionally, you can pass additional properties to check.\n *\n * @param additionalPropertiesToCheck - Array containing \"light\", \"dark\", and/or \"contrastText\"\n * @returns ([, value]: [any, PaletteColorOptions]) => boolean\n */\nexport default function createSimplePaletteValueFilter(additionalPropertiesToCheck = []) {\n  return ([, value]) => value && checkSimplePaletteColorValues(value, additionalPropertiesToCheck);\n}"],"names":["_excluded","AlertTitleRoot","styled","Typography","name","slot","overridesResolver","props","styles","root","memoTheme","_ref","theme","fontWeight","typography","fontWeightMedium","marginTop","React","inProps","ref","useDefaultProps","className","other","_objectWithoutProperties","ownerState","classes","composeClasses","getAlertTitleUtilityClass","useUtilityClasses","_jsx","_objectSpread","gutterBottom","component","clsx","generateUtilityClass","generateUtilityClasses","_excluded2","v6Colors","primary","secondary","error","info","success","warning","textPrimary","textSecondary","textDisabled","extendSxProp","internal_createExtendSxProp","TypographyRoot","variant","align","concat","capitalize","noWrap","paragraph","_theme$palette","margin","variants","style","font","lineHeight","letterSpacing","Object","entries","filter","_ref2","value","map","_ref3","palette","createSimplePaletteValueFilter","_ref4","color","vars","main","text","_ref5","_ref6","_ref7","textAlign","_ref8","overflow","textOverflow","whiteSpace","_ref9","marginBottom","_ref10","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","_useDefaultProps","themeProps","isSxColor","variantMapping","Component","slots","getTypographyUtilityClass","as","additionalPropertiesToCheck","arguments","length","undefined","obj","hasCorrectMainProperty","hasOwnProperty","checkSimplePaletteColorValues"],"sourceRoot":""}