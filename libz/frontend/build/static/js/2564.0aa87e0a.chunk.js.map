{"version":3,"file":"static/js/2564.0aa87e0a.chunk.js","mappings":"iRAOA,SAASA,EAAiBC,EAAOC,EAAgBC,EAAYC,EAAeC,GAC1E,MAAOC,EAAOC,GAAYC,EAAAA,UAAe,IACnCH,GAASF,EACJA,EAAWF,GAAOQ,QAEvBL,EACKA,EAAcH,GAAOQ,QAKvBP,IAgBT,OAdAQ,EAAAA,EAAAA,IAAkB,KAChB,IAAKP,EACH,OAEF,MAAMQ,EAAYR,EAAWF,GACvBW,EAAcA,KAClBL,EAASI,EAAUF,QAAQ,EAI7B,OAFAG,IACAD,EAAUE,iBAAiB,SAAUD,GAC9B,KACLD,EAAUG,oBAAoB,SAAUF,EAAY,CACrD,GACA,CAACX,EAAOE,IACJG,CACT,CAGA,MAGMS,GAHSC,EAAAA,EAAAA,GAAA,GACVR,GAE4CS,qBACjD,SAASC,EAAiBjB,EAAOC,EAAgBC,EAAYC,EAAeC,GAC1E,MAAMc,EAAqBX,EAAAA,aAAkB,IAAMN,GAAgB,CAACA,IAC9DkB,EAAoBZ,EAAAA,SAAc,KACtC,GAAIH,GAASF,EACX,MAAO,IAAMA,EAAWF,GAAOQ,QAEjC,GAAsB,OAAlBL,EAAwB,CAC1B,MAAM,QACJK,GACEL,EAAcH,GAClB,MAAO,IAAMQ,CACf,CACA,OAAOU,CAAkB,GACxB,CAACA,EAAoBlB,EAAOG,EAAeC,EAAOF,KAC9CkB,EAAaC,GAAad,EAAAA,SAAc,KAC7C,GAAmB,OAAfL,EACF,MAAO,CAACgB,EAAoB,IAAM,QAEpC,MAAMI,EAAiBpB,EAAWF,GAClC,MAAO,CAAC,IAAMsB,EAAed,QAASe,IACpCD,EAAeV,iBAAiB,SAAUW,GACnC,KACLD,EAAeT,oBAAoB,SAAUU,EAAO,GAEtD,GACD,CAACL,EAAoBhB,EAAYF,IAEpC,OADcc,EAA+BO,EAAWD,EAAaD,EAEvE,CAGO,SAASK,IAA0C,IAAbC,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACrD,MAAM,QACJG,GACEJ,EACJ,OAAO,SAAuBK,GAA0B,IAAdC,EAAOL,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC/CM,GAAQC,EAAAA,EAAAA,KACRD,GAASH,IACXG,EAAQA,EAAMH,IAAYG,GAM5B,MAAME,EAAsC,qBAAXC,QAAuD,qBAAtBA,OAAOjC,YACnE,eACJD,GAAiB,EAAK,WACtBC,GAAagC,EAAoBC,OAAOjC,WAAa,MAAI,cACzDC,EAAgB,KAAI,MACpBC,GAAQ,IACNgC,EAAAA,EAAAA,GAAc,CAChBC,KAAM,mBACNC,MAAOP,EACPC,UAOF,IAAIhC,EAA8B,oBAAf8B,EAA4BA,EAAWE,GAASF,EACnE9B,EAAQA,EAAMuC,QAAQ,eAAgB,IAUtC,YATuEX,IAAnCd,EAA+CG,EAAmBlB,GAC5DC,EAAOC,EAAgBC,EAAYC,EAAeC,EAS9F,CACF,CACsBoB,IClHtB,MAGA,EAHsBA,EAA6B,CACjDK,Q,QAASW,I,8CCKLC,EAAiB,CAAC,KAAM,KAAM,KAAM,KAAM,MAGnCC,EAAY,SAACC,EAAYC,GACpC,QADoDlB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAE3Ce,EAAeI,QAAQF,IAAeF,EAAeI,QAAQD,GAE/DH,EAAeI,QAAQF,GAAcF,EAAeI,QAAQD,EACrE,EAGaE,EAAc,SAACH,EAAYC,GACtC,OADsDlB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAE7Ce,EAAeI,QAAQD,IAAUH,EAAeI,QAAQF,GAE1DF,EAAeI,QAAQD,GAASH,EAAeI,QAAQF,EAChE,EAkFA,EAjFkB,eAACZ,EAAOL,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAKqB,IAClC,MACEC,UAAWC,GAAkB,EAAK,MAClCC,GAAQ,EACRC,aAAcC,GACZrB,EA0EJ,OAzEA,SAAmBO,GACjB,MAAMe,GAAepB,EAAAA,EAAAA,KACfD,EAAQM,EAAMN,OAASqB,EAC7BC,GAIIlB,EAAAA,EAAAA,GAAc,CAChBJ,QACAK,KAAM,eACNC,WAPI,aACJa,EAAY,MACZP,GAEDU,EADIC,GAAKC,EAAAA,EAAAA,GAAAF,EAAAG,IAMHC,EAAcC,GAAmBpD,EAAAA,UAAe,IACvDE,EAAAA,EAAAA,IAAkB,KAChBkD,GAAgB,EAAK,GACpB,IAOH,MACMC,EADO5B,EAAM6B,YAAYC,KAAKC,QAAQC,UACjBC,QAAO,CAACC,EAAQC,KAGzC,MAAM3D,EAAU4D,EAAcpC,EAAM6B,YAAYQ,GAAGF,IACnD,OAAQD,GAAU1D,EAAU2D,EAAMD,CAAM,GACvC,MACGI,GAAIvD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACR6B,MAAOA,IAAUc,GAAgBR,EAAQU,OAAgBhC,IAAcuB,GAAgBC,GACnFH,EAAkB,CACpBjB,SACE,CAAC,GACFuB,GASL,YAAmB3B,IAAf0C,EAAK1B,MACA,MAEW2B,EAAAA,EAAAA,KAAKxB,GAAShC,EAAAA,EAAAA,GAAA,GAC7BuD,GAEP,CAwBgB,CACjB,EC/FD,SAASE,EAASlC,GAChB,MAAM,SACJmC,EAAQ,KACRC,EAAI,MACJ9B,GACEN,EACEN,GAAQC,EAAAA,EAAAA,KACd,IAAI0C,GAAU,EAGd,GAAID,EACF,GAAIE,MAAMC,QAAQH,GAChB,IAAK,IAAII,EAAI,EAAGA,EAAIJ,EAAK/C,OAAQmD,GAAK,EAAG,CAEvC,GAAIlC,IADe8B,EAAKI,GACE,CACxBH,GAAU,EACV,KACF,CACF,MACSD,GAAQ9B,IAAU8B,IAC3BC,GAAU,GAKd,GAAIA,EAEF,IAAK,IAAIG,EAAI,EAAGA,EAAI9C,EAAM6B,YAAYC,KAAKnC,OAAQmD,GAAK,EAAG,CACzD,MAAMnC,EAAaX,EAAM6B,YAAYC,KAAKgB,GACpCC,EAAezC,EAAM,GAAD0C,OAAIrC,EAAU,OAClCsC,EAAiB3C,EAAM,GAAD0C,OAAIrC,EAAU,SAC1C,GAAIoC,GAAgBrC,EAAUC,EAAYC,IAAUqC,GAAkBnC,EAAYH,EAAYC,GAAQ,CACpG+B,GAAU,EACV,KACF,CACF,CAEF,OAAKA,EAGEF,EAFE,IAGX,CACAD,EAASU,UAAY,CAInBT,SAAUU,IAAAA,KAKVC,OAAQD,IAAAA,KAKRE,KAAMF,IAAAA,KAKNG,OAAQH,IAAAA,KAKRI,KAAMJ,IAAAA,KAINT,KAAMS,IAAAA,UAAoB,CAACA,IAAAA,MAAgB,CAAC,KAAM,KAAM,KAAM,KAAM,OAAQA,IAAAA,QAAkBA,IAAAA,MAAgB,CAAC,KAAM,KAAM,KAAM,KAAM,UAKvIK,OAAQL,IAAAA,KAKRM,KAAMN,IAAAA,KAKNvC,MAAOuC,IAAAA,OAAiBO,WAKxBC,OAAQR,IAAAA,KAKRS,KAAMT,IAAAA,KAKNU,OAAQV,IAAAA,KAKRW,KAAMX,IAAAA,MAKR,QAAeY,GAAf,CAA2BvB,G,gECtHpB,SAASwB,EAAyBC,GACvC,OAAOC,EAAAA,EAAAA,IAAqB,mBAAoBD,EAClD,EACyBE,EAAAA,EAAAA,GAAuB,mBAAoB,CAAC,OAAQ,SAAU,OAAQ,SAAU,SAAU,OAAQ,SAAU,SAAU,OAAQ,SAAU,SAAU,OAAQ,SAAU,SAAU,OAAQ,WAA/M,MCLa1C,EAAA,gCA4BP2C,GAAgBC,EAAAA,EAAAA,IAAO,MAAO,CAClChE,KAAM,mBACN4D,KAAM,QAFcI,EAGnBC,IAGG,IAHF,MACFtE,EAAK,WACLuE,GACDD,EACC,MAAME,EAAS,CACbC,QAAS,QAEX,OAAA1F,EAAAA,EAAAA,GAAA,GACKwF,EAAW1C,YAAY6C,KAAIC,IAGxB,IAHyB,WAC7BhE,EAAU,IACViE,GACDD,EACC,MAAY,SAARC,EACK,CACL,CAAC5E,EAAM6B,YAAYa,KAAK/B,IAAc6D,GAG3B,OAARI,EAAe,CACpB,CAAC5E,EAAM6B,YAAYQ,GAAG1B,IAAc6D,GAClC,CACF,CAACxE,EAAM6B,YAAYgD,KAAKlE,IAAc6D,EACvC,IACAvC,QAAO,CAAC6C,EAAGC,KACZC,OAAOlD,KAAKiD,GAAGE,SAAQC,IACrBJ,EAAEI,GAAKH,EAAEG,EAAE,IAENJ,IACN,CAAC,GAAE,IA2HV,QApHA,SAAmBxE,GACjB,MAAM,SACJmC,EAAQ,UACR0C,EAAS,KACTzC,GAEEpC,EADCiB,GAAKC,EAAAA,EAAAA,GACNlB,EAAKmB,GACHzB,GAAQC,EAAAA,EAAAA,KAYR4B,EAAc,GACpB,IAAK,IAAIiB,EAAI,EAAGA,EAAI9C,EAAM6B,YAAYC,KAAKnC,OAAQmD,GAAK,EAAG,CACzD,MAAMnC,EAAaX,EAAM6B,YAAYC,KAAKgB,GACpCC,EAAexB,EAAM,GAADyB,OAAIrC,EAAU,OAClCsC,EAAiB1B,EAAM,GAADyB,OAAIrC,EAAU,SACtCoC,GACFlB,EAAYuD,KAAK,CACfzE,aACAiE,IAAK,OAGL3B,GACFpB,EAAYuD,KAAK,CACfzE,aACAiE,IAAK,QAGX,CACA,GAAIlC,EAAM,EACgBE,MAAMC,QAAQH,GAAQA,EAAO,CAACA,IACtCuC,SAAQtE,IACtBkB,EAAYuD,KAAK,CACfzE,aACAiE,IAAK,QACL,GAEN,CACA,MAAML,GAAUxF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACXuB,GAAK,IACRuB,gBAEIwD,EAxGkBd,KACxB,MAAM,QACJc,EAAO,YACPxD,GACE0C,EACEe,EAAQ,CACZC,KAAM,CAAC,UAAW1D,EAAY6C,KAAIc,IAG5B,IAH6B,WACjC7E,EAAU,IACViE,GACDY,EACC,MAAe,SAARZ,EAAiB,GAAH5B,OAAM4B,GAAG5B,QAAGyC,EAAAA,EAAAA,GAAW9E,IAAW,GAAAqC,OAAQrC,GAAUqC,QAAGyC,EAAAA,EAAAA,GAAWb,GAAM,MAGjG,OAAOc,EAAAA,EAAAA,GAAeJ,EAAOtB,EAA0BqB,EAAQ,EA2F/CM,CAAkBpB,GAClC,OAAoBhC,EAAAA,EAAAA,KAAK6B,EAAe,CACtCe,WAAWS,EAAAA,EAAAA,GAAKP,EAAQE,KAAMJ,GAC9BZ,WAAYA,EACZ9B,SAAUA,GAEd,ECzHahB,EAAA,mGA2Ib,QA9HA,SAAgBnB,GACd,MAAM,eACJuF,EAAiB,KAAI,OACrBzC,GAAS,EAAK,KACdC,GAAO,EAAK,OACZC,GAAS,EAAK,KACdC,GAAO,EAAK,OACZC,GAAS,EAAK,KACdC,GAAO,EAAK,OACZE,GAAS,EAAK,KACdC,GAAO,EAAK,OACZC,GAAS,EAAK,KACdC,GAAO,GAELxD,EADCiB,GAAKC,EAAAA,EAAAA,GACNlB,EAAKmB,GACT,MAAuB,OAAnBoE,GACkBtD,EAAAA,EAAAA,KAAKC,GAAQzD,EAAAA,EAAAA,GAAA,CAC/BqE,OAAQA,EACRC,KAAMA,EACNC,OAAQA,EACRC,KAAMA,EACNC,OAAQA,EACRC,KAAMA,EACNE,OAAQA,EACRC,KAAMA,EACNC,OAAQA,EACRC,KAAMA,GACHvC,KAGagB,EAAAA,EAAAA,KAAKuD,GAAS/G,EAAAA,EAAAA,GAAA,CAChCqE,OAAQA,EACRC,KAAMA,EACNC,OAAQA,EACRC,KAAMA,EACNC,OAAQA,EACRC,KAAMA,EACNE,OAAQA,EACRC,KAAMA,EACNC,OAAQA,EACRC,KAAMA,GACHvC,GAEP,C,+CCvDA,Q,QAAyB,C,+CCEzB,Q,QAAgC,C,6DCFjB,SAASnB,EAAcX,GACpC,MAAM,MACJO,EAAK,KACLK,EAAI,MACJC,GACEb,EACJ,OAAKO,GAAUA,EAAM+F,YAAe/F,EAAM+F,WAAW1F,IAAUL,EAAM+F,WAAW1F,GAAM2F,cAG/EC,EAAAA,EAAAA,GAAajG,EAAM+F,WAAW1F,GAAM2F,aAAc1F,GAFhDA,CAGX,C,6DCAA,MACA,EAD4C,qBAAXH,OAAyB5B,EAAAA,gBAAwBA,EAAAA,S,8BCFlF,IAAI2H,EAAuBC,EAAQ,MAEnC,SAASC,IAAiB,CAC1B,SAASC,IAA0B,CACnCA,EAAuBC,kBAAoBF,EAE3CG,EAAOC,QAAU,WACf,SAASC,EAAKnG,EAAOoG,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWZ,EAAf,CAIA,IAAIa,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAI1G,KAAO,sBACL0G,CAPN,CAQF,CAEA,SAASE,IACP,OAAOR,CACT,CAHAA,EAAK/C,WAAa+C,EAMlB,IAAIS,EAAiB,CACnBC,MAAOV,EACPW,OAAQX,EACRY,KAAMZ,EACNa,KAAMb,EACNc,OAAQd,EACRe,OAAQf,EACRgB,OAAQhB,EACRiB,OAAQjB,EAERkB,IAAKlB,EACLmB,QAASX,EACTY,QAASpB,EACTqB,YAAarB,EACbsB,WAAYd,EACZe,KAAMvB,EACNwB,SAAUhB,EACViB,MAAOjB,EACPkB,UAAWlB,EACXmB,MAAOnB,EACPoB,MAAOpB,EAEPqB,eAAgBjC,EAChBC,kBAAmBF,GAKrB,OAFAc,EAAe/D,UAAY+D,EAEpBA,CACT,C,iBC/CEX,EAAOC,QAAUL,EAAQ,KAARA,E,wBCNnBI,EAAOC,QAFoB,8C","sources":["../node_modules/@mui/system/esm/useMediaQuery/useMediaQuery.js","../node_modules/@mui/material/useMediaQuery/index.js","../node_modules/@mui/material/Hidden/withWidth.js","../node_modules/@mui/material/Hidden/HiddenJs.js","../node_modules/@mui/material/Hidden/hiddenCssClasses.js","../node_modules/@mui/material/Hidden/HiddenCss.js","../node_modules/@mui/material/Hidden/Hidden.js","../node_modules/@mui/material/utils/capitalize.js","../node_modules/@mui/material/utils/useEnhancedEffect.js","../node_modules/@mui/system/esm/useThemeProps/getThemeProps.js","../node_modules/@mui/utils/esm/useEnhancedEffect/useEnhancedEffect.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\nimport { getThemeProps } from \"../useThemeProps/index.js\";\nimport useTheme from \"../useThemeWithoutDefault/index.js\";\n// TODO React 17: Remove `useMediaQueryOld` once React 17 support is removed\nfunction useMediaQueryOld(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  const [match, setMatch] = React.useState(() => {\n    if (noSsr && matchMedia) {\n      return matchMedia(query).matches;\n    }\n    if (ssrMatchMedia) {\n      return ssrMatchMedia(query).matches;\n    }\n\n    // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n    return defaultMatches;\n  });\n  useEnhancedEffect(() => {\n    if (!matchMedia) {\n      return undefined;\n    }\n    const queryList = matchMedia(query);\n    const updateMatch = () => {\n      setMatch(queryList.matches);\n    };\n    updateMatch();\n    queryList.addEventListener('change', updateMatch);\n    return () => {\n      queryList.removeEventListener('change', updateMatch);\n    };\n  }, [query, matchMedia]);\n  return match;\n}\n\n// See https://github.com/mui/material-ui/issues/41190#issuecomment-2040873379 for why\nconst safeReact = {\n  ...React\n};\nconst maybeReactUseSyncExternalStore = safeReact.useSyncExternalStore;\nfunction useMediaQueryNew(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  const getDefaultSnapshot = React.useCallback(() => defaultMatches, [defaultMatches]);\n  const getServerSnapshot = React.useMemo(() => {\n    if (noSsr && matchMedia) {\n      return () => matchMedia(query).matches;\n    }\n    if (ssrMatchMedia !== null) {\n      const {\n        matches\n      } = ssrMatchMedia(query);\n      return () => matches;\n    }\n    return getDefaultSnapshot;\n  }, [getDefaultSnapshot, query, ssrMatchMedia, noSsr, matchMedia]);\n  const [getSnapshot, subscribe] = React.useMemo(() => {\n    if (matchMedia === null) {\n      return [getDefaultSnapshot, () => () => {}];\n    }\n    const mediaQueryList = matchMedia(query);\n    return [() => mediaQueryList.matches, notify => {\n      mediaQueryList.addEventListener('change', notify);\n      return () => {\n        mediaQueryList.removeEventListener('change', notify);\n      };\n    }];\n  }, [getDefaultSnapshot, matchMedia, query]);\n  const match = maybeReactUseSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n  return match;\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function unstable_createUseMediaQuery(params = {}) {\n  const {\n    themeId\n  } = params;\n  return function useMediaQuery(queryInput, options = {}) {\n    let theme = useTheme();\n    if (theme && themeId) {\n      theme = theme[themeId] || theme;\n    }\n    // Wait for jsdom to support the match media feature.\n    // All the browsers MUI support have this built-in.\n    // This defensive check is here for simplicity.\n    // Most of the time, the match media logic isn't central to people tests.\n    const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n    const {\n      defaultMatches = false,\n      matchMedia = supportMatchMedia ? window.matchMedia : null,\n      ssrMatchMedia = null,\n      noSsr = false\n    } = getThemeProps({\n      name: 'MuiUseMediaQuery',\n      props: options,\n      theme\n    });\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof queryInput === 'function' && theme === null) {\n        console.error(['MUI: The `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n      }\n    }\n    let query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n    query = query.replace(/^@media( ?)/m, '');\n    const useMediaQueryImplementation = maybeReactUseSyncExternalStore !== undefined ? useMediaQueryNew : useMediaQueryOld;\n    const match = useMediaQueryImplementation(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr);\n    if (process.env.NODE_ENV !== 'production') {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      React.useDebugValue({\n        query,\n        match\n      });\n    }\n    return match;\n  };\n}\nconst useMediaQuery = unstable_createUseMediaQuery();\nexport default useMediaQuery;","import { unstable_createUseMediaQuery } from '@mui/system/useMediaQuery';\nimport THEME_ID from \"../styles/identifier.js\";\nconst useMediaQuery = unstable_createUseMediaQuery({\n  themeId: THEME_ID\n});\nexport default useMediaQuery;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport getDisplayName from '@mui/utils/getDisplayName';\nimport { getThemeProps } from '@mui/system/useThemeProps';\nimport useTheme from \"../styles/useTheme.js\";\nimport useEnhancedEffect from \"../utils/useEnhancedEffect.js\";\nimport useMediaQuery from \"../useMediaQuery/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst breakpointKeys = ['xs', 'sm', 'md', 'lg', 'xl'];\n\n// By default, returns true if screen width is the same or greater than the given breakpoint.\nexport const isWidthUp = (breakpoint, width, inclusive = true) => {\n  if (inclusive) {\n    return breakpointKeys.indexOf(breakpoint) <= breakpointKeys.indexOf(width);\n  }\n  return breakpointKeys.indexOf(breakpoint) < breakpointKeys.indexOf(width);\n};\n\n// By default, returns true if screen width is less than the given breakpoint.\nexport const isWidthDown = (breakpoint, width, inclusive = false) => {\n  if (inclusive) {\n    return breakpointKeys.indexOf(width) <= breakpointKeys.indexOf(breakpoint);\n  }\n  return breakpointKeys.indexOf(width) < breakpointKeys.indexOf(breakpoint);\n};\nconst withWidth = (options = {}) => Component => {\n  const {\n    withTheme: withThemeOption = false,\n    noSSR = false,\n    initialWidth: initialWidthOption\n  } = options;\n  function WithWidth(props) {\n    const contextTheme = useTheme();\n    const theme = props.theme || contextTheme;\n    const {\n      initialWidth,\n      width,\n      ...other\n    } = getThemeProps({\n      theme,\n      name: 'MuiWithWidth',\n      props\n    });\n    const [mountedState, setMountedState] = React.useState(false);\n    useEnhancedEffect(() => {\n      setMountedState(true);\n    }, []);\n\n    /**\n     * innerWidth |xs      sm      md      lg      xl\n     *            |-------|-------|-------|-------|------>\n     * width      |  xs   |  sm   |  md   |  lg   |  xl\n     */\n    const keys = theme.breakpoints.keys.slice().reverse();\n    const widthComputed = keys.reduce((output, key) => {\n      // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      const matches = useMediaQuery(theme.breakpoints.up(key));\n      return !output && matches ? key : output;\n    }, null);\n    const more = {\n      width: width || (mountedState || noSSR ? widthComputed : undefined) || initialWidth || initialWidthOption,\n      ...(withThemeOption ? {\n        theme\n      } : {}),\n      ...other\n    };\n\n    // When rendering the component on the server,\n    // we have no idea about the client browser screen width.\n    // In order to prevent blinks and help the reconciliation of the React tree\n    // we are not rendering the child component.\n    //\n    // An alternative is to use the `initialWidth` property.\n    if (more.width === undefined) {\n      return null;\n    }\n    return /*#__PURE__*/_jsx(Component, {\n      ...more\n    });\n  }\n  process.env.NODE_ENV !== \"production\" ? WithWidth.propTypes = {\n    /**\n     * As `window.innerWidth` is unavailable on the server,\n     * we default to rendering an empty component during the first mount.\n     * You might want to use a heuristic to approximate\n     * the screen width of the client browser screen width.\n     *\n     * For instance, you could be using the user-agent or the client-hints.\n     * https://caniuse.com/#search=client%20hint\n     */\n    initialWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n    /**\n     * @ignore\n     */\n    theme: PropTypes.object,\n    /**\n     * Bypass the width calculation logic.\n     */\n    width: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl'])\n  } : void 0;\n  if (process.env.NODE_ENV !== 'production') {\n    WithWidth.displayName = `WithWidth(${getDisplayName(Component)})`;\n  }\n  return WithWidth;\n};\nexport default withWidth;","'use client';\n\nimport PropTypes from 'prop-types';\nimport exactProp from '@mui/utils/exactProp';\nimport withWidth, { isWidthDown, isWidthUp } from \"./withWidth.js\";\nimport useTheme from \"../styles/useTheme.js\";\n\n/**\n * @ignore - internal component.\n */\nfunction HiddenJs(props) {\n  const {\n    children,\n    only,\n    width\n  } = props;\n  const theme = useTheme();\n  let visible = true;\n\n  // `only` check is faster to get out sooner if used.\n  if (only) {\n    if (Array.isArray(only)) {\n      for (let i = 0; i < only.length; i += 1) {\n        const breakpoint = only[i];\n        if (width === breakpoint) {\n          visible = false;\n          break;\n        }\n      }\n    } else if (only && width === only) {\n      visible = false;\n    }\n  }\n\n  // Allow `only` to be combined with other props. If already hidden, no need to check others.\n  if (visible) {\n    // determine visibility based on the smallest size up\n    for (let i = 0; i < theme.breakpoints.keys.length; i += 1) {\n      const breakpoint = theme.breakpoints.keys[i];\n      const breakpointUp = props[`${breakpoint}Up`];\n      const breakpointDown = props[`${breakpoint}Down`];\n      if (breakpointUp && isWidthUp(breakpoint, width) || breakpointDown && isWidthDown(breakpoint, width)) {\n        visible = false;\n        break;\n      }\n    }\n  }\n  if (!visible) {\n    return null;\n  }\n  return children;\n}\nHiddenJs.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * If `true`, screens this size and down are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  lgDown: PropTypes.bool,\n  /**\n   * If `true`, screens this size and up are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  lgUp: PropTypes.bool,\n  /**\n   * If `true`, screens this size and down are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  mdDown: PropTypes.bool,\n  /**\n   * If `true`, screens this size and up are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  mdUp: PropTypes.bool,\n  /**\n   * Hide the given breakpoint(s).\n   */\n  only: PropTypes.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']), PropTypes.arrayOf(PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']))]),\n  /**\n   * If `true`, screens this size and down are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  smDown: PropTypes.bool,\n  /**\n   * If `true`, screens this size and up are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  smUp: PropTypes.bool,\n  /**\n   * @ignore\n   * width prop provided by withWidth decorator.\n   */\n  width: PropTypes.string.isRequired,\n  /**\n   * If `true`, screens this size and down are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  xlDown: PropTypes.bool,\n  /**\n   * If `true`, screens this size and up are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  xlUp: PropTypes.bool,\n  /**\n   * If `true`, screens this size and down are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  xsDown: PropTypes.bool,\n  /**\n   * If `true`, screens this size and up are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  xsUp: PropTypes.bool\n};\nif (process.env.NODE_ENV !== 'production') {\n  HiddenJs.propTypes = exactProp(HiddenJs.propTypes);\n}\nexport default withWidth()(HiddenJs);","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getHiddenCssUtilityClass(slot) {\n  return generateUtilityClass('PrivateHiddenCss', slot);\n}\nconst hiddenCssClasses = generateUtilityClasses('PrivateHiddenCss', ['root', 'xlDown', 'xlUp', 'onlyXl', 'lgDown', 'lgUp', 'onlyLg', 'mdDown', 'mdUp', 'onlyMd', 'smDown', 'smUp', 'onlySm', 'xsDown', 'xsUp', 'onlyXs']);\nexport default hiddenCssClasses;","'use client';\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from \"../utils/capitalize.js\";\nimport styled from \"../styles/styled.js\";\nimport useTheme from \"../styles/useTheme.js\";\nimport { getHiddenCssUtilityClass } from \"./hiddenCssClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    breakpoints\n  } = ownerState;\n  const slots = {\n    root: ['root', ...breakpoints.map(({\n      breakpoint,\n      dir\n    }) => {\n      return dir === 'only' ? `${dir}${capitalize(breakpoint)}` : `${breakpoint}${capitalize(dir)}`;\n    })]\n  };\n  return composeClasses(slots, getHiddenCssUtilityClass, classes);\n};\n\n// FIXME(romgrk): Can't use memoTheme here, should we memo also on ownerState?\nconst HiddenCssRoot = styled('div', {\n  name: 'PrivateHiddenCss',\n  slot: 'Root'\n})(({\n  theme,\n  ownerState\n}) => {\n  const hidden = {\n    display: 'none'\n  };\n  return {\n    ...ownerState.breakpoints.map(({\n      breakpoint,\n      dir\n    }) => {\n      if (dir === 'only') {\n        return {\n          [theme.breakpoints.only(breakpoint)]: hidden\n        };\n      }\n      return dir === 'up' ? {\n        [theme.breakpoints.up(breakpoint)]: hidden\n      } : {\n        [theme.breakpoints.down(breakpoint)]: hidden\n      };\n    }).reduce((r, o) => {\n      Object.keys(o).forEach(k => {\n        r[k] = o[k];\n      });\n      return r;\n    }, {})\n  };\n});\n\n/**\n * @ignore - internal component.\n */\nfunction HiddenCss(props) {\n  const {\n    children,\n    className,\n    only,\n    ...other\n  } = props;\n  const theme = useTheme();\n  if (process.env.NODE_ENV !== 'production') {\n    const unknownProps = Object.keys(other).filter(propName => {\n      const isUndeclaredBreakpoint = !theme.breakpoints.keys.some(breakpoint => {\n        return `${breakpoint}Up` === propName || `${breakpoint}Down` === propName;\n      });\n      return !['classes', 'theme', 'isRtl', 'sx'].includes(propName) && isUndeclaredBreakpoint;\n    });\n    if (unknownProps.length > 0) {\n      console.error(`MUI: Unsupported props received by \\`<Hidden implementation=\"css\" />\\`: ${unknownProps.join(', ')}. Did you forget to wrap this component in a ThemeProvider declaring these breakpoints?`);\n    }\n  }\n  const breakpoints = [];\n  for (let i = 0; i < theme.breakpoints.keys.length; i += 1) {\n    const breakpoint = theme.breakpoints.keys[i];\n    const breakpointUp = other[`${breakpoint}Up`];\n    const breakpointDown = other[`${breakpoint}Down`];\n    if (breakpointUp) {\n      breakpoints.push({\n        breakpoint,\n        dir: 'up'\n      });\n    }\n    if (breakpointDown) {\n      breakpoints.push({\n        breakpoint,\n        dir: 'down'\n      });\n    }\n  }\n  if (only) {\n    const onlyBreakpoints = Array.isArray(only) ? only : [only];\n    onlyBreakpoints.forEach(breakpoint => {\n      breakpoints.push({\n        breakpoint,\n        dir: 'only'\n      });\n    });\n  }\n  const ownerState = {\n    ...props,\n    breakpoints\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(HiddenCssRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? HiddenCss.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Specify which implementation to use.  'js' is the default, 'css' works better for\n   * server-side rendering.\n   */\n  implementation: PropTypes.oneOf(['js', 'css']),\n  /**\n   * If `true`, screens this size and down are hidden.\n   */\n  lgDown: PropTypes.bool,\n  /**\n   * If `true`, screens this size and up are hidden.\n   */\n  lgUp: PropTypes.bool,\n  /**\n   * If `true`, screens this size and down are hidden.\n   */\n  mdDown: PropTypes.bool,\n  /**\n   * If `true`, screens this size and up are hidden.\n   */\n  mdUp: PropTypes.bool,\n  /**\n   * Hide the given breakpoint(s).\n   */\n  only: PropTypes.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']), PropTypes.arrayOf(PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']))]),\n  /**\n   * If `true`, screens this size and down are hidden.\n   */\n  smDown: PropTypes.bool,\n  /**\n   * If `true`, screens this size and up are hidden.\n   */\n  smUp: PropTypes.bool,\n  /**\n   * If `true`, screens this size and down are hidden.\n   */\n  xlDown: PropTypes.bool,\n  /**\n   * If `true`, screens this size and up are hidden.\n   */\n  xlUp: PropTypes.bool,\n  /**\n   * If `true`, screens this size and down are hidden.\n   */\n  xsDown: PropTypes.bool,\n  /**\n   * If `true`, screens this size and up are hidden.\n   */\n  xsUp: PropTypes.bool\n} : void 0;\nexport default HiddenCss;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport HiddenJs from \"./HiddenJs.js\";\nimport HiddenCss from \"./HiddenCss.js\";\n\n/**\n * Responsively hides children based on the selected implementation.\n *\n * @deprecated The Hidden component was deprecated in Material UI v5. To learn more, see [the Hidden section](https://mui.com/material-ui/migration/v5-component-changes/#hidden) of the migration docs.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction Hidden(props) {\n  const {\n    implementation = 'js',\n    lgDown = false,\n    lgUp = false,\n    mdDown = false,\n    mdUp = false,\n    smDown = false,\n    smUp = false,\n    xlDown = false,\n    xlUp = false,\n    xsDown = false,\n    xsUp = false,\n    ...other\n  } = props;\n  if (implementation === 'js') {\n    return /*#__PURE__*/_jsx(HiddenJs, {\n      lgDown: lgDown,\n      lgUp: lgUp,\n      mdDown: mdDown,\n      mdUp: mdUp,\n      smDown: smDown,\n      smUp: smUp,\n      xlDown: xlDown,\n      xlUp: xlUp,\n      xsDown: xsDown,\n      xsUp: xsUp,\n      ...other\n    });\n  }\n  return /*#__PURE__*/_jsx(HiddenCss, {\n    lgDown: lgDown,\n    lgUp: lgUp,\n    mdDown: mdDown,\n    mdUp: mdUp,\n    smDown: smDown,\n    smUp: smUp,\n    xlDown: xlDown,\n    xlUp: xlUp,\n    xsDown: xsDown,\n    xsUp: xsUp,\n    ...other\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? Hidden.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Specify which implementation to use.  'js' is the default, 'css' works better for\n   * server-side rendering.\n   * @default 'js'\n   */\n  implementation: PropTypes.oneOf(['css', 'js']),\n  /**\n   * You can use this prop when choosing the `js` implementation with server-side rendering.\n   *\n   * As `window.innerWidth` is unavailable on the server,\n   * we default to rendering an empty component during the first mount.\n   * You might want to use a heuristic to approximate\n   * the screen width of the client browser screen width.\n   *\n   * For instance, you could be using the user-agent or the client-hints.\n   * https://caniuse.com/#search=client%20hint\n   */\n  initialWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n  /**\n   * If `true`, component is hidden on screens below (but not including) this size.\n   * @default false\n   */\n  lgDown: PropTypes.bool,\n  /**\n   * If `true`, component is hidden on screens this size and above.\n   * @default false\n   */\n  lgUp: PropTypes.bool,\n  /**\n   * If `true`, component is hidden on screens below (but not including) this size.\n   * @default false\n   */\n  mdDown: PropTypes.bool,\n  /**\n   * If `true`, component is hidden on screens this size and above.\n   * @default false\n   */\n  mdUp: PropTypes.bool,\n  /**\n   * Hide the given breakpoint(s).\n   */\n  only: PropTypes.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']), PropTypes.arrayOf(PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']).isRequired)]),\n  /**\n   * If `true`, component is hidden on screens below (but not including) this size.\n   * @default false\n   */\n  smDown: PropTypes.bool,\n  /**\n   * If `true`, component is hidden on screens this size and above.\n   * @default false\n   */\n  smUp: PropTypes.bool,\n  /**\n   * If `true`, component is hidden on screens below (but not including) this size.\n   * @default false\n   */\n  xlDown: PropTypes.bool,\n  /**\n   * If `true`, component is hidden on screens this size and above.\n   * @default false\n   */\n  xlUp: PropTypes.bool,\n  /**\n   * If `true`, component is hidden on screens below (but not including) this size.\n   * @default false\n   */\n  xsDown: PropTypes.bool,\n  /**\n   * If `true`, component is hidden on screens this size and above.\n   * @default false\n   */\n  xsUp: PropTypes.bool\n} : void 0;\nexport default Hidden;","import capitalize from '@mui/utils/capitalize';\nexport default capitalize;","'use client';\n\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\nexport default useEnhancedEffect;","import resolveProps from '@mui/utils/resolveProps';\nexport default function getThemeProps(params) {\n  const {\n    theme,\n    name,\n    props\n  } = params;\n  if (!theme || !theme.components || !theme.components[name] || !theme.components[name].defaultProps) {\n    return props;\n  }\n  return resolveProps(theme.components[name].defaultProps, props);\n}","'use client';\n\nimport * as React from 'react';\n\n/**\n * A version of `React.useLayoutEffect` that does not show a warning when server-side rendering.\n * This is useful for effects that are only needed for client-side rendering but not for SSR.\n *\n * Before you use this hook, make sure to read https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\n * and confirm it doesn't apply to your use-case.\n */\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nexport default useEnhancedEffect;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["useMediaQueryOld","query","defaultMatches","matchMedia","ssrMatchMedia","noSsr","match","setMatch","React","matches","useEnhancedEffect","queryList","updateMatch","addEventListener","removeEventListener","maybeReactUseSyncExternalStore","_objectSpread","useSyncExternalStore","useMediaQueryNew","getDefaultSnapshot","getServerSnapshot","getSnapshot","subscribe","mediaQueryList","notify","unstable_createUseMediaQuery","params","arguments","length","undefined","themeId","queryInput","options","theme","useTheme","supportMatchMedia","window","getThemeProps","name","props","replace","THEME_ID","breakpointKeys","isWidthUp","breakpoint","width","indexOf","isWidthDown","Component","withTheme","withThemeOption","noSSR","initialWidth","initialWidthOption","contextTheme","_getThemeProps","other","_objectWithoutProperties","_excluded","mountedState","setMountedState","widthComputed","breakpoints","keys","slice","reverse","reduce","output","key","useMediaQuery","up","more","_jsx","HiddenJs","children","only","visible","Array","isArray","i","breakpointUp","concat","breakpointDown","propTypes","PropTypes","lgDown","lgUp","mdDown","mdUp","smDown","smUp","isRequired","xlDown","xlUp","xsDown","xsUp","withWidth","getHiddenCssUtilityClass","slot","generateUtilityClass","generateUtilityClasses","HiddenCssRoot","styled","_ref2","ownerState","hidden","display","map","_ref3","dir","down","r","o","Object","forEach","k","className","push","classes","slots","root","_ref","capitalize","composeClasses","useUtilityClasses","clsx","implementation","HiddenCss","components","defaultProps","resolveProps","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","propName","componentName","location","propFullName","secret","err","Error","getShim","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}