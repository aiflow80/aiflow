{"version":3,"file":"static/js/9808.f83475d3.chunk.js","mappings":"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","sources":["../node_modules/@mui/lab/AvatarGroup/AvatarGroup.js","../node_modules/@mui/material/AvatarGroup/AvatarGroup.js","../node_modules/@mui/material/AvatarGroup/avatarGroupClasses.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport AvatarGroup from '@mui/material/AvatarGroup';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nlet warnedOnce = false;\nconst warn = () => {\n  if (!warnedOnce) {\n    console.warn(['MUI: The AvatarGroup component was moved from the lab to the core.', '', \"You should use `import { AvatarGroup } from '@mui/material'`\", \"or `import AvatarGroup from '@mui/material/AvatarGroup'`\"].join('\\n'));\n    warnedOnce = true;\n  }\n};\n\n/**\n * @ignore - do not document.\n */\nexport default /*#__PURE__*/React.forwardRef(function DeprecatedAvatarGroup(props, ref) {\n  warn();\n  return /*#__PURE__*/_jsx(AvatarGroup, {\n    ref: ref,\n    ...props\n  });\n});","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Avatar, { avatarClasses } from \"../Avatar/index.js\";\nimport avatarGroupClasses, { getAvatarGroupUtilityClass } from \"./avatarGroupClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst SPACINGS = {\n  small: -16,\n  medium: -8\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar']\n  };\n  return composeClasses(slots, getAvatarGroupUtilityClass, classes);\n};\nconst AvatarGroupRoot = styled('div', {\n  name: 'MuiAvatarGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [{\n      [`& .${avatarGroupClasses.avatar}`]: styles.avatar\n    }, styles.root];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'row-reverse',\n  [`& .${avatarClasses.root}`]: {\n    border: `2px solid ${(theme.vars || theme).palette.background.default}`,\n    boxSizing: 'content-box',\n    marginLeft: 'var(--AvatarGroup-spacing, -8px)',\n    '&:last-child': {\n      marginLeft: 0\n    }\n  }\n})));\nconst AvatarGroup = /*#__PURE__*/React.forwardRef(function AvatarGroup(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAvatarGroup'\n  });\n  const {\n    children: childrenProp,\n    className,\n    component = 'div',\n    componentsProps,\n    max = 5,\n    renderSurplus,\n    slotProps = {},\n    slots = {},\n    spacing = 'medium',\n    total,\n    variant = 'circular',\n    ...other\n  } = props;\n  let clampedMax = max < 2 ? 2 : max;\n  const ownerState = {\n    ...props,\n    max,\n    spacing,\n    component,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  const children = React.Children.toArray(childrenProp).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The AvatarGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    return /*#__PURE__*/React.isValidElement(child);\n  });\n  const totalAvatars = total || children.length;\n  if (totalAvatars === clampedMax) {\n    clampedMax += 1;\n  }\n  clampedMax = Math.min(totalAvatars + 1, clampedMax);\n  const maxAvatars = Math.min(children.length, clampedMax - 1);\n  const extraAvatars = Math.max(totalAvatars - clampedMax, totalAvatars - maxAvatars, 0);\n  const extraAvatarsElement = renderSurplus ? renderSurplus(extraAvatars) : `+${extraAvatars}`;\n  const marginValue = ownerState.spacing && SPACINGS[ownerState.spacing] !== undefined ? SPACINGS[ownerState.spacing] : -ownerState.spacing || -8;\n  const externalForwardedProps = {\n    slots,\n    slotProps: {\n      surplus: slotProps.additionalAvatar ?? componentsProps?.additionalAvatar,\n      ...componentsProps,\n      ...slotProps\n    }\n  };\n  const [SurplusSlot, surplusProps] = useSlot('surplus', {\n    elementType: Avatar,\n    externalForwardedProps,\n    className: classes.avatar,\n    ownerState,\n    additionalProps: {\n      variant\n    }\n  });\n  return /*#__PURE__*/_jsxs(AvatarGroupRoot, {\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ...other,\n    style: {\n      '--AvatarGroup-spacing': marginValue ? `${marginValue}px` : undefined,\n      ...other.style\n    },\n    children: [extraAvatars ? /*#__PURE__*/_jsx(SurplusSlot, {\n      ...surplusProps,\n      children: extraAvatarsElement\n    }) : null, children.slice(0, maxAvatars).reverse().map(child => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: clsx(child.props.className, classes.avatar),\n        variant: child.props.variant || variant\n      });\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The avatars to stack.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   *\n   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  componentsProps: PropTypes.shape({\n    additionalAvatar: PropTypes.object\n  }),\n  /**\n   * Max avatars to show before +x.\n   * @default 5\n   */\n  max: chainPropTypes(PropTypes.number, props => {\n    if (props.max < 2) {\n      return new Error(['MUI: The prop `max` should be equal to 2 or above.', 'A value below is clamped to 2.'].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * custom renderer of extraAvatars\n   * @param {number} surplus number of extra avatars\n   * @returns {React.ReactNode} custom element to display\n   */\n  renderSurplus: PropTypes.func,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    additionalAvatar: PropTypes.object,\n    surplus: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    surplus: PropTypes.elementType\n  }),\n  /**\n   * Spacing between avatars.\n   * @default 'medium'\n   */\n  spacing: PropTypes.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.number]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The total number of avatars. Used for calculating the number of extra avatars.\n   * @default children.length\n   */\n  total: PropTypes.number,\n  /**\n   * The variant to use.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default AvatarGroup;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAvatarGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiAvatarGroup', slot);\n}\nconst avatarGroupClasses = generateUtilityClasses('MuiAvatarGroup', ['root', 'avatar']);\nexport default avatarGroupClasses;"],"names":["warnedOnce","React","props","ref","console","warn","join","_jsx","AvatarGroup","_objectSpread","_excluded","SPACINGS","small","medium","AvatarGroupRoot","styled","name","slot","overridesResolver","styles","concat","avatarGroupClasses","avatar","root","memoTheme","_ref","theme","display","flexDirection","avatarClasses","border","vars","palette","background","default","boxSizing","marginLeft","inProps","_slotProps$additional","useDefaultProps","children","childrenProp","className","component","componentsProps","max","renderSurplus","slotProps","slots","spacing","total","variant","other","_objectWithoutProperties","clampedMax","ownerState","classes","composeClasses","getAvatarGroupUtilityClass","useUtilityClasses","toArray","filter","child","totalAvatars","length","Math","min","maxAvatars","extraAvatars","extraAvatarsElement","marginValue","undefined","externalForwardedProps","surplus","additionalAvatar","SurplusSlot","surplusProps","useSlot","elementType","Avatar","additionalProps","_jsxs","as","clsx","style","slice","reverse","map","generateUtilityClass","generateUtilityClasses"],"sourceRoot":""}