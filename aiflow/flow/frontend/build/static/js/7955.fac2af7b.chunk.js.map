{"version":3,"file":"static/js/7955.fac2af7b.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Badge/useBadge.js","../node_modules/@mui/material/Badge/Badge.js","../node_modules/@mui/material/Badge/badgeClasses.js","../node_modules/@mui/material/utils/capitalize.js","../node_modules/@mui/material/utils/createSimplePaletteValueFilter.js","../node_modules/@mui/utils/esm/isHostComponent/isHostComponent.js","../node_modules/@mui/utils/esm/appendOwnerState/appendOwnerState.js","../node_modules/@mui/utils/esm/extractEventHandlers/extractEventHandlers.js","../node_modules/@mui/utils/esm/omitEventHandlers/omitEventHandlers.js","../node_modules/@mui/utils/esm/mergeSlotProps/mergeSlotProps.js","../node_modules/@mui/utils/esm/resolveComponentProps/resolveComponentProps.js","../node_modules/@mui/utils/esm/setRef/setRef.js","../node_modules/@mui/utils/esm/useForkRef/useForkRef.js","../node_modules/@mui/utils/esm/usePreviousProps/usePreviousProps.js","../node_modules/@mui/utils/esm/useSlotProps/useSlotProps.js"],"sourcesContent":["'use client';\n\nimport { usePreviousProps } from '@mui/utils';\n/**\n *\n * Demos:\n *\n * - [Badge](https://mui.com/base-ui/react-badge/#hook)\n *\n * API:\n *\n * - [useBadge API](https://mui.com/base-ui/react-badge/hooks-api/#use-badge)\n */\nfunction useBadge(parameters) {\n  const {\n    badgeContent: badgeContentProp,\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    showZero = false\n  } = parameters;\n  const prevProps = usePreviousProps({\n    badgeContent: badgeContentProp,\n    max: maxProp\n  });\n  let invisible = invisibleProp;\n  if (invisibleProp === false && badgeContentProp === 0 && !showZero) {\n    invisible = true;\n  }\n  const {\n    badgeContent,\n    max = maxProp\n  } = invisible ? prevProps : parameters;\n  const displayValue = badgeContent && Number(badgeContent) > max ? `${max}+` : badgeContent;\n  return {\n    badgeContent,\n    invisible,\n    max,\n    displayValue\n  };\n}\nexport default useBadge;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport usePreviousProps from '@mui/utils/usePreviousProps';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport useBadge from \"./useBadge.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport badgeClasses, { getBadgeUtilityClass } from \"./badgeClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    anchorOrigin,\n    invisible,\n    overlap,\n    variant,\n    classes = {}\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, invisible && 'invisible', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, `overlap${capitalize(overlap)}`, color !== 'default' && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  justifyContent: 'center',\n  alignContent: 'center',\n  alignItems: 'center',\n  position: 'absolute',\n  boxSizing: 'border-box',\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(12),\n  minWidth: RADIUS_STANDARD * 2,\n  lineHeight: 1,\n  padding: '0 6px',\n  height: RADIUS_STANDARD * 2,\n  borderRadius: RADIUS_STANDARD,\n  zIndex: 1,\n  // Render the badge on top of potential ripples.\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.enteringScreen\n  }),\n  variants: [...Object.entries(theme.palette).filter(createSimplePaletteValueFilter(['contrastText'])).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      backgroundColor: (theme.vars || theme).palette[color].main,\n      color: (theme.vars || theme).palette[color].contrastText\n    }\n  })), {\n    props: {\n      variant: 'dot'\n    },\n    style: {\n      borderRadius: RADIUS_DOT,\n      height: RADIUS_DOT * 2,\n      minWidth: RADIUS_DOT * 2,\n      padding: 0\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular',\n    style: {\n      top: 0,\n      right: 0,\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular',\n    style: {\n      bottom: 0,\n      right: 0,\n      transform: 'scale(1) translate(50%, 50%)',\n      transformOrigin: '100% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, 50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular',\n    style: {\n      top: 0,\n      left: 0,\n      transform: 'scale(1) translate(-50%, -50%)',\n      transformOrigin: '0% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular',\n    style: {\n      bottom: 0,\n      left: 0,\n      transform: 'scale(1) translate(-50%, 50%)',\n      transformOrigin: '0% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, 50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular',\n    style: {\n      top: '14%',\n      right: '14%',\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular',\n    style: {\n      bottom: '14%',\n      right: '14%',\n      transform: 'scale(1) translate(50%, 50%)',\n      transformOrigin: '100% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, 50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular',\n    style: {\n      top: '14%',\n      left: '14%',\n      transform: 'scale(1) translate(-50%, -50%)',\n      transformOrigin: '0% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular',\n    style: {\n      bottom: '14%',\n      left: '14%',\n      transform: 'scale(1) translate(-50%, 50%)',\n      transformOrigin: '0% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, 50%)'\n      }\n    }\n  }, {\n    props: {\n      invisible: true\n    },\n    style: {\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    }\n  }]\n})));\nfunction getAnchorOrigin(anchorOrigin) {\n  return {\n    vertical: anchorOrigin?.vertical ?? 'top',\n    horizontal: anchorOrigin?.horizontal ?? 'right'\n  };\n}\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n  const {\n    anchorOrigin: anchorOriginProp,\n    className,\n    classes: classesProp,\n    component,\n    components = {},\n    componentsProps = {},\n    children,\n    overlap: overlapProp = 'rectangular',\n    color: colorProp = 'default',\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    badgeContent: badgeContentProp,\n    slots,\n    slotProps,\n    showZero = false,\n    variant: variantProp = 'standard',\n    ...other\n  } = props;\n  const {\n    badgeContent,\n    invisible: invisibleFromHook,\n    max,\n    displayValue: displayValueFromHook\n  } = useBadge({\n    max: maxProp,\n    invisible: invisibleProp,\n    badgeContent: badgeContentProp,\n    showZero\n  });\n  const prevProps = usePreviousProps({\n    anchorOrigin: getAnchorOrigin(anchorOriginProp),\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp,\n    badgeContent: badgeContentProp\n  });\n  const invisible = invisibleFromHook || badgeContent == null && variantProp !== 'dot';\n  const {\n    color = colorProp,\n    overlap = overlapProp,\n    anchorOrigin: anchorOriginPropProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n  const anchorOrigin = getAnchorOrigin(anchorOriginPropProp);\n  const displayValue = variant !== 'dot' ? displayValueFromHook : undefined;\n  const ownerState = {\n    ...props,\n    badgeContent,\n    invisible,\n    max,\n    displayValue,\n    showZero,\n    anchorOrigin,\n    color,\n    overlap,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  // support both `slots` and `components` for backward compatibility\n  const RootSlot = slots?.root ?? components.Root ?? BadgeRoot;\n  const BadgeSlot = slots?.badge ?? components.Badge ?? BadgeBadge;\n  const rootSlotProps = slotProps?.root ?? componentsProps.root;\n  const badgeSlotProps = slotProps?.badge ?? componentsProps.badge;\n  const rootProps = useSlotProps({\n    elementType: RootSlot,\n    externalSlotProps: rootSlotProps,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref,\n      as: component\n    },\n    ownerState,\n    className: clsx(rootSlotProps?.className, classes.root, className)\n  });\n  const badgeProps = useSlotProps({\n    elementType: BadgeSlot,\n    externalSlotProps: badgeSlotProps,\n    ownerState,\n    className: clsx(classes.badge, badgeSlotProps?.className)\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, {\n    ...rootProps,\n    children: [children, /*#__PURE__*/_jsx(BadgeSlot, {\n      ...badgeProps,\n      children: displayValue\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']),\n    vertical: PropTypes.oneOf(['bottom', 'top'])\n  }),\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside.\n   *\n   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getBadgeUtilityClass(slot) {\n  return generateUtilityClass('MuiBadge', slot);\n}\nconst badgeClasses = generateUtilityClasses('MuiBadge', ['root', 'badge', 'dot', 'standard', 'anchorOriginTopRight', 'anchorOriginBottomRight', 'anchorOriginTopLeft', 'anchorOriginBottomLeft', 'invisible', 'colorError', 'colorInfo', 'colorPrimary', 'colorSecondary', 'colorSuccess', 'colorWarning', 'overlapRectangular', 'overlapCircular',\n// TODO: v6 remove the overlap value from these class keys\n'anchorOriginTopLeftCircular', 'anchorOriginTopLeftRectangular', 'anchorOriginTopRightCircular', 'anchorOriginTopRightRectangular', 'anchorOriginBottomLeftCircular', 'anchorOriginBottomLeftRectangular', 'anchorOriginBottomRightCircular', 'anchorOriginBottomRightRectangular']);\nexport default badgeClasses;","import capitalize from '@mui/utils/capitalize';\nexport default capitalize;","/**\n * Type guard to check if the object has a \"main\" property of type string.\n *\n * @param obj - the object to check\n * @returns boolean\n */\nfunction hasCorrectMainProperty(obj) {\n  return typeof obj.main === 'string';\n}\n/**\n * Checks if the object conforms to the SimplePaletteColorOptions type.\n * The minimum requirement is that the object has a \"main\" property of type string, this is always checked.\n * Optionally, you can pass additional properties to check.\n *\n * @param obj - The object to check\n * @param additionalPropertiesToCheck - Array containing \"light\", \"dark\", and/or \"contrastText\"\n * @returns boolean\n */\nfunction checkSimplePaletteColorValues(obj, additionalPropertiesToCheck = []) {\n  if (!hasCorrectMainProperty(obj)) {\n    return false;\n  }\n  for (const value of additionalPropertiesToCheck) {\n    if (!obj.hasOwnProperty(value) || typeof obj[value] !== 'string') {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Creates a filter function used to filter simple palette color options.\n * The minimum requirement is that the object has a \"main\" property of type string, this is always checked.\n * Optionally, you can pass additional properties to check.\n *\n * @param additionalPropertiesToCheck - Array containing \"light\", \"dark\", and/or \"contrastText\"\n * @returns ([, value]: [any, PaletteColorOptions]) => boolean\n */\nexport default function createSimplePaletteValueFilter(additionalPropertiesToCheck = []) {\n  return ([, value]) => value && checkSimplePaletteColorValues(value, additionalPropertiesToCheck);\n}","/**\n * Determines if a given element is a DOM element name (i.e. not a React component).\n */\nfunction isHostComponent(element) {\n  return typeof element === 'string';\n}\nexport default isHostComponent;","import isHostComponent from \"../isHostComponent/index.js\";\n\n/**\n * Type of the ownerState based on the type of an element it applies to.\n * This resolves to the provided OwnerState for React components and `undefined` for host components.\n * Falls back to `OwnerState | undefined` when the exact type can't be determined in development time.\n */\n\n/**\n * Appends the ownerState object to the props, merging with the existing one if necessary.\n *\n * @param elementType Type of the element that owns the `existingProps`. If the element is a DOM node or undefined, `ownerState` is not applied.\n * @param otherProps Props of the element.\n * @param ownerState\n */\nfunction appendOwnerState(elementType, otherProps, ownerState) {\n  if (elementType === undefined || isHostComponent(elementType)) {\n    return otherProps;\n  }\n  return {\n    ...otherProps,\n    ownerState: {\n      ...otherProps.ownerState,\n      ...ownerState\n    }\n  };\n}\nexport default appendOwnerState;","/**\n * Extracts event handlers from a given object.\n * A prop is considered an event handler if it is a function and its name starts with `on`.\n *\n * @param object An object to extract event handlers from.\n * @param excludeKeys An array of keys to exclude from the returned object.\n */\nfunction extractEventHandlers(object, excludeKeys = []) {\n  if (object === undefined) {\n    return {};\n  }\n  const result = {};\n  Object.keys(object).filter(prop => prop.match(/^on[A-Z]/) && typeof object[prop] === 'function' && !excludeKeys.includes(prop)).forEach(prop => {\n    result[prop] = object[prop];\n  });\n  return result;\n}\nexport default extractEventHandlers;","/**\n * Removes event handlers from the given object.\n * A field is considered an event handler if it is a function with a name beginning with `on`.\n *\n * @param object Object to remove event handlers from.\n * @returns Object with event handlers removed.\n */\nfunction omitEventHandlers(object) {\n  if (object === undefined) {\n    return {};\n  }\n  const result = {};\n  Object.keys(object).filter(prop => !(prop.match(/^on[A-Z]/) && typeof object[prop] === 'function')).forEach(prop => {\n    result[prop] = object[prop];\n  });\n  return result;\n}\nexport default omitEventHandlers;","import clsx from 'clsx';\nimport extractEventHandlers from \"../extractEventHandlers/index.js\";\nimport omitEventHandlers from \"../omitEventHandlers/index.js\";\n/**\n * Merges the slot component internal props (usually coming from a hook)\n * with the externally provided ones.\n *\n * The merge order is (the latter overrides the former):\n * 1. The internal props (specified as a getter function to work with get*Props hook result)\n * 2. Additional props (specified internally on a Base UI component)\n * 3. External props specified on the owner component. These should only be used on a root slot.\n * 4. External props specified in the `slotProps.*` prop.\n * 5. The `className` prop - combined from all the above.\n * @param parameters\n * @returns\n */\nfunction mergeSlotProps(parameters) {\n  const {\n    getSlotProps,\n    additionalProps,\n    externalSlotProps,\n    externalForwardedProps,\n    className\n  } = parameters;\n  if (!getSlotProps) {\n    // The simpler case - getSlotProps is not defined, so no internal event handlers are defined,\n    // so we can simply merge all the props without having to worry about extracting event handlers.\n    const joinedClasses = clsx(additionalProps?.className, className, externalForwardedProps?.className, externalSlotProps?.className);\n    const mergedStyle = {\n      ...additionalProps?.style,\n      ...externalForwardedProps?.style,\n      ...externalSlotProps?.style\n    };\n    const props = {\n      ...additionalProps,\n      ...externalForwardedProps,\n      ...externalSlotProps\n    };\n    if (joinedClasses.length > 0) {\n      props.className = joinedClasses;\n    }\n    if (Object.keys(mergedStyle).length > 0) {\n      props.style = mergedStyle;\n    }\n    return {\n      props,\n      internalRef: undefined\n    };\n  }\n\n  // In this case, getSlotProps is responsible for calling the external event handlers.\n  // We don't need to include them in the merged props because of this.\n\n  const eventHandlers = extractEventHandlers({\n    ...externalForwardedProps,\n    ...externalSlotProps\n  });\n  const componentsPropsWithoutEventHandlers = omitEventHandlers(externalSlotProps);\n  const otherPropsWithoutEventHandlers = omitEventHandlers(externalForwardedProps);\n  const internalSlotProps = getSlotProps(eventHandlers);\n\n  // The order of classes is important here.\n  // Emotion (that we use in libraries consuming Base UI) depends on this order\n  // to properly override style. It requires the most important classes to be last\n  // (see https://github.com/mui/material-ui/pull/33205) for the related discussion.\n  const joinedClasses = clsx(internalSlotProps?.className, additionalProps?.className, className, externalForwardedProps?.className, externalSlotProps?.className);\n  const mergedStyle = {\n    ...internalSlotProps?.style,\n    ...additionalProps?.style,\n    ...externalForwardedProps?.style,\n    ...externalSlotProps?.style\n  };\n  const props = {\n    ...internalSlotProps,\n    ...additionalProps,\n    ...otherPropsWithoutEventHandlers,\n    ...componentsPropsWithoutEventHandlers\n  };\n  if (joinedClasses.length > 0) {\n    props.className = joinedClasses;\n  }\n  if (Object.keys(mergedStyle).length > 0) {\n    props.style = mergedStyle;\n  }\n  return {\n    props,\n    internalRef: internalSlotProps.ref\n  };\n}\nexport default mergeSlotProps;","/**\n * If `componentProps` is a function, calls it with the provided `ownerState`.\n * Otherwise, just returns `componentProps`.\n */\nfunction resolveComponentProps(componentProps, ownerState, slotState) {\n  if (typeof componentProps === 'function') {\n    return componentProps(ownerState, slotState);\n  }\n  return componentProps;\n}\nexport default resolveComponentProps;","/**\n * TODO v5: consider making it private\n *\n * passes {value} to {ref}\n *\n * WARNING: Be sure to only call this inside a callback that is passed as a ref.\n * Otherwise, make sure to cleanup the previous {ref} if it changes. See\n * https://github.com/mui/material-ui/issues/13539\n *\n * Useful if you want to expose the ref of an inner component to the public API\n * while still using it inside the component.\n * @param ref A ref callback or ref object. If anything falsy, this is a no-op.\n */\nexport default function setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}","'use client';\n\nimport * as React from 'react';\nimport setRef from \"../setRef/index.js\";\n\n/**\n * Takes an array of refs and returns a new ref which will apply any modification to all of the refs.\n * This is useful when you want to have the ref used in multiple places.\n *\n * ```tsx\n * const rootRef = React.useRef<Instance>(null);\n * const refFork = useForkRef(rootRef, props.ref);\n *\n * return (\n *   <Root {...props} ref={refFork} />\n * );\n * ```\n *\n * @param {Array<React.Ref<Instance> | undefined>} refs The ref array.\n * @returns {React.RefCallback<Instance> | null} The new ref callback.\n */\nexport default function useForkRef(...refs) {\n  /**\n   * This will create a new function if the refs passed to this hook change and are all defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior.\n   */\n  return React.useMemo(() => {\n    if (refs.every(ref => ref == null)) {\n      return null;\n    }\n    return instance => {\n      refs.forEach(ref => {\n        setRef(ref, instance);\n      });\n    };\n    // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- intentionally ignoring that the dependency array must be an array literal\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}","'use client';\n\nimport * as React from 'react';\nconst usePreviousProps = value => {\n  const ref = React.useRef({});\n  React.useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\nexport default usePreviousProps;","'use client';\n\nimport useForkRef from \"../useForkRef/index.js\";\nimport appendOwnerState from \"../appendOwnerState/index.js\";\nimport mergeSlotProps from \"../mergeSlotProps/index.js\";\nimport resolveComponentProps from \"../resolveComponentProps/index.js\";\n/**\n * @ignore - do not document.\n * Builds the props to be passed into the slot of an unstyled component.\n * It merges the internal props of the component with the ones supplied by the user, allowing to customize the behavior.\n * If the slot component is not a host component, it also merges in the `ownerState`.\n *\n * @param parameters.getSlotProps - A function that returns the props to be passed to the slot component.\n */\nfunction useSlotProps(parameters) {\n  const {\n    elementType,\n    externalSlotProps,\n    ownerState,\n    skipResolvingSlotProps = false,\n    ...other\n  } = parameters;\n  const resolvedComponentsProps = skipResolvingSlotProps ? {} : resolveComponentProps(externalSlotProps, ownerState);\n  const {\n    props: mergedProps,\n    internalRef\n  } = mergeSlotProps({\n    ...other,\n    externalSlotProps: resolvedComponentsProps\n  });\n  const ref = useForkRef(internalRef, resolvedComponentsProps?.ref, parameters.additionalProps?.ref);\n  const props = appendOwnerState(elementType, {\n    ...mergedProps,\n    ref\n  }, ownerState);\n  return props;\n}\nexport default useSlotProps;"],"names":["parameters","badgeContent","badgeContentProp","invisible","invisibleProp","max","maxProp","showZero","prevProps","usePreviousProps","displayValue","Number","concat","_excluded","BadgeRoot","styled","name","slot","overridesResolver","props","styles","root","position","display","verticalAlign","flexShrink","BadgeBadge","ownerState","badge","variant","capitalize","anchorOrigin","vertical","horizontal","overlap","color","memoTheme","_ref","theme","flexDirection","flexWrap","justifyContent","alignContent","alignItems","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","minWidth","RADIUS_STANDARD","lineHeight","padding","height","borderRadius","zIndex","transition","transitions","create","easing","easeInOut","duration","enteringScreen","variants","Object","entries","palette","filter","createSimplePaletteValueFilter","map","_ref2","style","backgroundColor","vars","main","contrastText","RADIUS_DOT","_ref3","top","right","transform","transformOrigin","badgeClasses","_ref4","bottom","_ref5","left","_ref6","_ref7","_ref8","_ref9","_ref10","leavingScreen","getAnchorOrigin","_anchorOrigin$vertica","_anchorOrigin$horizon","React","inProps","ref","_ref11","_slots$root","_ref12","_slots$badge","_slotProps$root","_slotProps$badge","useDefaultProps","anchorOriginProp","className","classes","classesProp","component","components","componentsProps","children","overlapProp","colorProp","slots","slotProps","variantProp","other","_objectWithoutProperties","invisibleFromHook","displayValueFromHook","useBadge","anchorOriginPropProp","undefined","_objectSpread","composeClasses","getBadgeUtilityClass","useUtilityClasses","RootSlot","Root","BadgeSlot","Badge","rootSlotProps","badgeSlotProps","rootProps","useSlotProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","as","clsx","badgeProps","_jsxs","_jsx","generateUtilityClass","generateUtilityClasses","additionalPropertiesToCheck","arguments","length","value","obj","hasCorrectMainProperty","hasOwnProperty","checkSimplePaletteColorValues","element","otherProps","isHostComponent","object","excludeKeys","result","keys","prop","match","includes","forEach","getSlotProps","joinedClasses","mergedStyle","internalRef","eventHandlers","extractEventHandlers","componentsPropsWithoutEventHandlers","omitEventHandlers","otherPropsWithoutEventHandlers","internalSlotProps","componentProps","slotState","setRef","current","useForkRef","_len","refs","Array","_key","every","instance","_parameters$additiona","skipResolvingSlotProps","resolvedComponentsProps","resolveComponentProps","mergedProps","mergeSlotProps","appendOwnerState"],"sourceRoot":""}