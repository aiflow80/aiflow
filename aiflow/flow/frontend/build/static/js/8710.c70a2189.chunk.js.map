{"version":3,"file":"static/js/8710.c70a2189.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Autocomplete/Autocomplete.js","../node_modules/@mui/material/Autocomplete/autocompleteClasses.js","../node_modules/@mui/material/ListSubheader/ListSubheader.js","../node_modules/@mui/material/ListSubheader/listSubheaderClasses.js","../node_modules/@mui/material/internal/svg-icons/Close.js","../node_modules/@mui/material/useAutocomplete/useAutocomplete.js","../node_modules/@mui/utils/esm/usePreviousProps/usePreviousProps.js"],"sourcesContent":["'use client';\n\nvar _ClearIcon, _ArrowDropDownIcon;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport integerPropType from '@mui/utils/integerPropType';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport useAutocomplete, { createFilterOptions } from \"../useAutocomplete/index.js\";\nimport Popper from \"../Popper/index.js\";\nimport ListSubheader from \"../ListSubheader/index.js\";\nimport Paper from \"../Paper/index.js\";\nimport IconButton from \"../IconButton/index.js\";\nimport Chip from \"../Chip/index.js\";\nimport inputClasses from \"../Input/inputClasses.js\";\nimport inputBaseClasses from \"../InputBase/inputBaseClasses.js\";\nimport outlinedInputClasses from \"../OutlinedInput/outlinedInputClasses.js\";\nimport filledInputClasses from \"../FilledInput/filledInputClasses.js\";\nimport ClearIcon from \"../internal/svg-icons/Close.js\";\nimport ArrowDropDownIcon from \"../internal/svg-icons/ArrowDropDown.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport autocompleteClasses, { getAutocompleteUtilityClass } from \"./autocompleteClasses.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePortal,\n    expanded,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused,\n    popupOpen,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', expanded && 'expanded', focused && 'focused', fullWidth && 'fullWidth', hasClearIcon && 'hasClearIcon', hasPopupIcon && 'hasPopupIcon'],\n    inputRoot: ['inputRoot'],\n    input: ['input', inputFocused && 'inputFocused'],\n    tag: ['tag', `tagSize${capitalize(size)}`],\n    endAdornment: ['endAdornment'],\n    clearIndicator: ['clearIndicator'],\n    popupIndicator: ['popupIndicator', popupOpen && 'popupIndicatorOpen'],\n    popper: ['popper', disablePortal && 'popperDisablePortal'],\n    paper: ['paper'],\n    listbox: ['listbox'],\n    loading: ['loading'],\n    noOptions: ['noOptions'],\n    option: ['option'],\n    groupLabel: ['groupLabel'],\n    groupUl: ['groupUl']\n  };\n  return composeClasses(slots, getAutocompleteUtilityClass, classes);\n};\nconst AutocompleteRoot = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      fullWidth,\n      hasClearIcon,\n      hasPopupIcon,\n      inputFocused,\n      size\n    } = ownerState;\n    return [{\n      [`& .${autocompleteClasses.tag}`]: styles.tag\n    }, {\n      [`& .${autocompleteClasses.tag}`]: styles[`tagSize${capitalize(size)}`]\n    }, {\n      [`& .${autocompleteClasses.inputRoot}`]: styles.inputRoot\n    }, {\n      [`& .${autocompleteClasses.input}`]: styles.input\n    }, {\n      [`& .${autocompleteClasses.input}`]: inputFocused && styles.inputFocused\n    }, styles.root, fullWidth && styles.fullWidth, hasPopupIcon && styles.hasPopupIcon, hasClearIcon && styles.hasClearIcon];\n  }\n})({\n  [`&.${autocompleteClasses.focused} .${autocompleteClasses.clearIndicator}`]: {\n    visibility: 'visible'\n  },\n  /* Avoid double tap issue on iOS */\n  '@media (pointer: fine)': {\n    [`&:hover .${autocompleteClasses.clearIndicator}`]: {\n      visibility: 'visible'\n    }\n  },\n  [`& .${autocompleteClasses.tag}`]: {\n    margin: 3,\n    maxWidth: 'calc(100% - 6px)'\n  },\n  [`& .${autocompleteClasses.inputRoot}`]: {\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      width: 0,\n      minWidth: 30\n    }\n  },\n  [`& .${inputClasses.root}`]: {\n    paddingBottom: 1,\n    '& .MuiInput-input': {\n      padding: '4px 4px 4px 0px'\n    }\n  },\n  [`& .${inputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    [`& .${inputClasses.input}`]: {\n      padding: '2px 4px 3px 0'\n    }\n  },\n  [`& .${outlinedInputClasses.root}`]: {\n    padding: 9,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '7.5px 4px 7.5px 5px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${outlinedInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    // Don't specify paddingRight, as it overrides the default value set when there is only\n    // one of the popup or clear icon as the specificity is equal so the latter one wins\n    paddingTop: 6,\n    paddingBottom: 6,\n    paddingLeft: 6,\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '2.5px 4px 2.5px 8px'\n    }\n  },\n  [`& .${filledInputClasses.root}`]: {\n    paddingTop: 19,\n    paddingLeft: 8,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${filledInputClasses.input}`]: {\n      padding: '7px 4px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    paddingBottom: 1,\n    [`& .${filledInputClasses.input}`]: {\n      padding: '2.5px 4px'\n    }\n  },\n  [`& .${inputBaseClasses.hiddenLabel}`]: {\n    paddingTop: 8\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.hiddenLabel}`]: {\n    paddingTop: 0,\n    paddingBottom: 0,\n    [`& .${autocompleteClasses.input}`]: {\n      paddingTop: 16,\n      paddingBottom: 17\n    }\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.hiddenLabel}.${inputBaseClasses.sizeSmall}`]: {\n    [`& .${autocompleteClasses.input}`]: {\n      paddingTop: 8,\n      paddingBottom: 9\n    }\n  },\n  [`& .${autocompleteClasses.input}`]: {\n    flexGrow: 1,\n    textOverflow: 'ellipsis',\n    opacity: 0\n  },\n  variants: [{\n    props: {\n      fullWidth: true\n    },\n    style: {\n      width: '100%'\n    }\n  }, {\n    props: {\n      size: 'small'\n    },\n    style: {\n      [`& .${autocompleteClasses.tag}`]: {\n        margin: 2,\n        maxWidth: 'calc(100% - 4px)'\n      }\n    }\n  }, {\n    props: {\n      inputFocused: true\n    },\n    style: {\n      [`& .${autocompleteClasses.input}`]: {\n        opacity: 1\n      }\n    }\n  }, {\n    props: {\n      multiple: true\n    },\n    style: {\n      [`& .${autocompleteClasses.inputRoot}`]: {\n        flexWrap: 'wrap'\n      }\n    }\n  }]\n});\nconst AutocompleteEndAdornment = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'EndAdornment',\n  overridesResolver: (props, styles) => styles.endAdornment\n})({\n  // We use a position absolute to support wrapping tags.\n  position: 'absolute',\n  right: 0,\n  top: '50%',\n  transform: 'translate(0, -50%)'\n});\nconst AutocompleteClearIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'ClearIndicator',\n  overridesResolver: (props, styles) => styles.clearIndicator\n})({\n  marginRight: -2,\n  padding: 4,\n  visibility: 'hidden'\n});\nconst AutocompletePopupIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'PopupIndicator',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.popupIndicator, ownerState.popupOpen && styles.popupIndicatorOpen];\n  }\n})({\n  padding: 2,\n  marginRight: -2,\n  variants: [{\n    props: {\n      popupOpen: true\n    },\n    style: {\n      transform: 'rotate(180deg)'\n    }\n  }]\n});\nconst AutocompletePopper = styled(Popper, {\n  name: 'MuiAutocomplete',\n  slot: 'Popper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${autocompleteClasses.option}`]: styles.option\n    }, styles.popper, ownerState.disablePortal && styles.popperDisablePortal];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  zIndex: (theme.vars || theme).zIndex.modal,\n  variants: [{\n    props: {\n      disablePortal: true\n    },\n    style: {\n      position: 'absolute'\n    }\n  }]\n})));\nconst AutocompletePaper = styled(Paper, {\n  name: 'MuiAutocomplete',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(memoTheme(({\n  theme\n}) => ({\n  ...theme.typography.body1,\n  overflow: 'auto'\n})));\nconst AutocompleteLoading = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Loading',\n  overridesResolver: (props, styles) => styles.loading\n})(memoTheme(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '14px 16px'\n})));\nconst AutocompleteNoOptions = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'NoOptions',\n  overridesResolver: (props, styles) => styles.noOptions\n})(memoTheme(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '14px 16px'\n})));\nconst AutocompleteListbox = styled('ul', {\n  name: 'MuiAutocomplete',\n  slot: 'Listbox',\n  overridesResolver: (props, styles) => styles.listbox\n})(memoTheme(({\n  theme\n}) => ({\n  listStyle: 'none',\n  margin: 0,\n  padding: '8px 0',\n  maxHeight: '40vh',\n  overflow: 'auto',\n  position: 'relative',\n  [`& .${autocompleteClasses.option}`]: {\n    minHeight: 48,\n    display: 'flex',\n    overflow: 'hidden',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    cursor: 'pointer',\n    paddingTop: 6,\n    boxSizing: 'border-box',\n    outline: '0',\n    WebkitTapHighlightColor: 'transparent',\n    paddingBottom: 6,\n    paddingLeft: 16,\n    paddingRight: 16,\n    [theme.breakpoints.up('sm')]: {\n      minHeight: 'auto'\n    },\n    [`&.${autocompleteClasses.focused}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.hover,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&[aria-disabled=\"true\"]': {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`&.${autocompleteClasses.focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.focus\n    },\n    '&[aria-selected=\"true\"]': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n      [`&.${autocompleteClasses.focused}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: (theme.vars || theme).palette.action.selected\n        }\n      },\n      [`&.${autocompleteClasses.focusVisible}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n      }\n    }\n  }\n})));\nconst AutocompleteGroupLabel = styled(ListSubheader, {\n  name: 'MuiAutocomplete',\n  slot: 'GroupLabel',\n  overridesResolver: (props, styles) => styles.groupLabel\n})(memoTheme(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  top: -8\n})));\nconst AutocompleteGroupUl = styled('ul', {\n  name: 'MuiAutocomplete',\n  slot: 'GroupUl',\n  overridesResolver: (props, styles) => styles.groupUl\n})({\n  padding: 0,\n  [`& .${autocompleteClasses.option}`]: {\n    paddingLeft: 24\n  }\n});\nexport { createFilterOptions };\nconst Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAutocomplete'\n  });\n\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    ChipProps: ChipPropsProp,\n    className,\n    clearIcon = _ClearIcon || (_ClearIcon = /*#__PURE__*/_jsx(ClearIcon, {\n      fontSize: \"small\"\n    })),\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    clearText = 'Clear',\n    closeText = 'Close',\n    componentsProps,\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabled = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    disablePortal = false,\n    filterOptions,\n    filterSelectedOptions = false,\n    forcePopupIcon = 'auto',\n    freeSolo = false,\n    fullWidth = false,\n    getLimitTagsText = more => `+${more}`,\n    getOptionDisabled,\n    getOptionKey,\n    getOptionLabel: getOptionLabelProp,\n    isOptionEqualToValue,\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    limitTags = -1,\n    ListboxComponent: ListboxComponentProp,\n    ListboxProps: ListboxPropsProp,\n    loading = false,\n    loadingText = 'Loading…',\n    multiple = false,\n    noOptionsText = 'No options',\n    onChange,\n    onClose,\n    onHighlightChange,\n    onInputChange,\n    onOpen,\n    open,\n    openOnFocus = false,\n    openText = 'Open',\n    options,\n    PaperComponent: PaperComponentProp,\n    PopperComponent: PopperComponentProp,\n    popupIcon = _ArrowDropDownIcon || (_ArrowDropDownIcon = /*#__PURE__*/_jsx(ArrowDropDownIcon, {})),\n    readOnly = false,\n    renderGroup: renderGroupProp,\n    renderInput,\n    renderOption: renderOptionProp,\n    renderTags,\n    selectOnFocus = !props.freeSolo,\n    size = 'medium',\n    slots = {},\n    slotProps = {},\n    value: valueProp,\n    ...other\n  } = props;\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n  const {\n    getRootProps,\n    getInputProps,\n    getInputLabelProps,\n    getPopupIndicatorProps,\n    getClearProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    value,\n    dirty,\n    expanded,\n    id,\n    popupOpen,\n    focused,\n    focusedTag,\n    anchorEl,\n    setAnchorEl,\n    inputValue,\n    groupedOptions\n  } = useAutocomplete({\n    ...props,\n    componentName: 'Autocomplete'\n  });\n  const hasClearIcon = !disableClearable && !disabled && dirty && !readOnly;\n  const hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n  const {\n    onMouseDown: handleInputMouseDown\n  } = getInputProps();\n  const {\n    ref: listboxRef,\n    ...otherListboxProps\n  } = getListboxProps();\n  const defaultGetOptionLabel = option => option.label ?? option;\n  const getOptionLabel = getOptionLabelProp || defaultGetOptionLabel;\n\n  // If you modify this, make sure to keep the `AutocompleteOwnerState` type in sync.\n  const ownerState = {\n    ...props,\n    disablePortal,\n    expanded,\n    focused,\n    fullWidth,\n    getOptionLabel,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused: focusedTag === -1,\n    popupOpen,\n    size\n  };\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = {\n    slots: {\n      paper: PaperComponentProp,\n      popper: PopperComponentProp,\n      ...slots\n    },\n    slotProps: {\n      chip: ChipPropsProp,\n      listbox: ListboxPropsProp,\n      ...componentsProps,\n      ...slotProps\n    }\n  };\n  const [ListboxSlot, listboxProps] = useSlot('listbox', {\n    elementType: AutocompleteListbox,\n    externalForwardedProps,\n    ownerState,\n    className: classes.listbox,\n    additionalProps: otherListboxProps,\n    ref: listboxRef\n  });\n  const [PaperSlot, paperProps] = useSlot('paper', {\n    elementType: Paper,\n    externalForwardedProps,\n    ownerState,\n    className: classes.paper\n  });\n  const [PopperSlot, popperProps] = useSlot('popper', {\n    elementType: Popper,\n    externalForwardedProps,\n    ownerState,\n    className: classes.popper,\n    additionalProps: {\n      disablePortal,\n      style: {\n        width: anchorEl ? anchorEl.clientWidth : null\n      },\n      role: 'presentation',\n      anchorEl,\n      open: popupOpen\n    }\n  });\n  let startAdornment;\n  if (multiple && value.length > 0) {\n    const getCustomizedTagProps = params => ({\n      className: classes.tag,\n      disabled,\n      ...getTagProps(params)\n    });\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps, ownerState);\n    } else {\n      startAdornment = value.map((option, index) => {\n        const {\n          key,\n          ...customTagProps\n        } = getCustomizedTagProps({\n          index\n        });\n        return /*#__PURE__*/_jsx(Chip, {\n          label: getOptionLabel(option),\n          size: size,\n          ...customTagProps,\n          ...externalForwardedProps.slotProps.chip\n        }, key);\n      });\n    }\n  }\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    const more = startAdornment.length - limitTags;\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push(/*#__PURE__*/_jsx(\"span\", {\n        className: classes.tag,\n        children: getLimitTagsText(more)\n      }, startAdornment.length));\n    }\n  }\n  const defaultRenderGroup = params => /*#__PURE__*/_jsxs(\"li\", {\n    children: [/*#__PURE__*/_jsx(AutocompleteGroupLabel, {\n      className: classes.groupLabel,\n      ownerState: ownerState,\n      component: \"div\",\n      children: params.group\n    }), /*#__PURE__*/_jsx(AutocompleteGroupUl, {\n      className: classes.groupUl,\n      ownerState: ownerState,\n      children: params.children\n    })]\n  }, params.key);\n  const renderGroup = renderGroupProp || defaultRenderGroup;\n  const defaultRenderOption = (props2, option) => {\n    // Need to clearly apply key because of https://github.com/vercel/next.js/issues/55642\n    const {\n      key,\n      ...otherProps\n    } = props2;\n    return /*#__PURE__*/_jsx(\"li\", {\n      ...otherProps,\n      children: getOptionLabel(option)\n    }, key);\n  };\n  const renderOption = renderOptionProp || defaultRenderOption;\n  const renderListOption = (option, index) => {\n    const optionProps = getOptionProps({\n      option,\n      index\n    });\n    return renderOption({\n      ...optionProps,\n      className: classes.option\n    }, option, {\n      selected: optionProps['aria-selected'],\n      index,\n      inputValue\n    }, ownerState);\n  };\n  const clearIndicatorSlotProps = externalForwardedProps.slotProps.clearIndicator;\n  const popupIndicatorSlotProps = externalForwardedProps.slotProps.popupIndicator;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(AutocompleteRoot, {\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState,\n      ...getRootProps(other),\n      children: renderInput({\n        id,\n        disabled,\n        fullWidth: true,\n        size: size === 'small' ? 'small' : undefined,\n        InputLabelProps: getInputLabelProps(),\n        InputProps: {\n          ref: setAnchorEl,\n          className: classes.inputRoot,\n          startAdornment,\n          onMouseDown: event => {\n            if (event.target === event.currentTarget) {\n              handleInputMouseDown(event);\n            }\n          },\n          ...((hasClearIcon || hasPopupIcon) && {\n            endAdornment: /*#__PURE__*/_jsxs(AutocompleteEndAdornment, {\n              className: classes.endAdornment,\n              ownerState: ownerState,\n              children: [hasClearIcon ? /*#__PURE__*/_jsx(AutocompleteClearIndicator, {\n                ...getClearProps(),\n                \"aria-label\": clearText,\n                title: clearText,\n                ownerState: ownerState,\n                ...clearIndicatorSlotProps,\n                className: clsx(classes.clearIndicator, clearIndicatorSlotProps?.className),\n                children: clearIcon\n              }) : null, hasPopupIcon ? /*#__PURE__*/_jsx(AutocompletePopupIndicator, {\n                ...getPopupIndicatorProps(),\n                disabled: disabled,\n                \"aria-label\": popupOpen ? closeText : openText,\n                title: popupOpen ? closeText : openText,\n                ownerState: ownerState,\n                ...popupIndicatorSlotProps,\n                className: clsx(classes.popupIndicator, popupIndicatorSlotProps?.className),\n                children: popupIcon\n              }) : null]\n            })\n          })\n        },\n        inputProps: {\n          className: classes.input,\n          disabled,\n          readOnly,\n          ...getInputProps()\n        }\n      })\n    }), anchorEl ? /*#__PURE__*/_jsx(AutocompletePopper, {\n      as: PopperSlot,\n      ...popperProps,\n      children: /*#__PURE__*/_jsxs(AutocompletePaper, {\n        as: PaperSlot,\n        ...paperProps,\n        children: [loading && groupedOptions.length === 0 ? /*#__PURE__*/_jsx(AutocompleteLoading, {\n          className: classes.loading,\n          ownerState: ownerState,\n          children: loadingText\n        }) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/_jsx(AutocompleteNoOptions, {\n          className: classes.noOptions,\n          ownerState: ownerState,\n          role: \"presentation\",\n          onMouseDown: event => {\n            // Prevent input blur when interacting with the \"no options\" content\n            event.preventDefault();\n          },\n          children: noOptionsText\n        }) : null, groupedOptions.length > 0 ? /*#__PURE__*/_jsx(ListboxSlot, {\n          as: ListboxComponentProp,\n          ...listboxProps,\n          children: groupedOptions.map((option, index) => {\n            if (groupBy) {\n              return renderGroup({\n                key: option.key,\n                group: option.group,\n                children: option.options.map((option2, index2) => renderListOption(option2, option.index + index2))\n              });\n            }\n            return renderListOption(option, index);\n          })\n        }) : null]\n      })\n    }) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the portion of the selected suggestion that the user hasn't typed,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   * @default false\n   */\n  autoComplete: PropTypes.bool,\n  /**\n   * If `true`, the first option is automatically highlighted.\n   * @default false\n   */\n  autoHighlight: PropTypes.bool,\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   *\n   * When using the `freeSolo` mode, the typed value will be the input value\n   * if the Autocomplete loses focus without highlighting an option.\n   * @default false\n   */\n  autoSelect: PropTypes.bool,\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   * @default false\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n  /**\n   * Props applied to the [`Chip`](https://mui.com/material-ui/api/chip/) element.\n   * @deprecated Use `slotProps.chip` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  ChipProps: PropTypes.object,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The icon to display in place of the default clear icon.\n   * @default <ClearIcon fontSize=\"small\" />\n   */\n  clearIcon: PropTypes.node,\n  /**\n   * If `true`, the input's text is cleared on blur if no value is selected.\n   *\n   * Set it to `true` if you want to help the user enter a new value.\n   * Set it to `false` if you want to help the user resume their search.\n   * @default !props.freeSolo\n   */\n  clearOnBlur: PropTypes.bool,\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   * @default false\n   */\n  clearOnEscape: PropTypes.bool,\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).\n   * @default 'Clear'\n   */\n  clearText: PropTypes.string,\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @deprecated Use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  componentsProps: PropTypes.shape({\n    clearIndicator: PropTypes.object,\n    paper: PropTypes.object,\n    popper: PropTypes.object,\n    popupIndicator: PropTypes.object\n  }),\n  /**\n   * The default value. Use when the component is not controlled.\n   * @default props.multiple ? [] : null\n   */\n  defaultValue: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.defaultValue !== undefined && !Array.isArray(props.defaultValue)) {\n      return new Error(['MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.', `However, ${props.defaultValue} was provided.`].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.bool,\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   * @default false\n   */\n  disableCloseOnSelect: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   * @default false\n   */\n  disableListWrap: PropTypes.bool,\n  /**\n   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n  /**\n   * A function that determines the filtered options to be rendered on search.\n   *\n   * @default createFilterOptions()\n   * @param {Value[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {Value[]}\n   */\n  filterOptions: PropTypes.func,\n  /**\n   * If `true`, hide the selected options from the list box.\n   * @default false\n   */\n  filterSelectedOptions: PropTypes.bool,\n  /**\n   * Force the visibility display of the popup icon.\n   * @default 'auto'\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   * @default false\n   */\n  freeSolo: PropTypes.bool,\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   * @default (more) => `+${more}`\n   */\n  getLimitTagsText: PropTypes.func,\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {Value} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n  /**\n   * Used to determine the key for a given option.\n   * This can be useful when the labels of options are not unique (since labels are used as keys by default).\n   *\n   * @param {Value} option The option to get the key for.\n   * @returns {string | number}\n   */\n  getOptionKey: PropTypes.func,\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * If used in free solo mode, it must accept both the type of the options and a string.\n   *\n   * @param {Value} option\n   * @returns {string}\n   * @default (option) => option.label ?? option\n   */\n  getOptionLabel: PropTypes.func,\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {Value} option The Autocomplete option.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   * @default !props.freeSolo\n   */\n  handleHomeEndKeys: PropTypes.bool,\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide an id it will fall back to a randomly generated one.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the highlight can move to the input.\n   * @default false\n   */\n  includeInputInList: PropTypes.bool,\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n  /**\n   * Used to determine if the option represents the given value.\n   * Uses strict equality by default.\n   * ⚠️ Both arguments need to be handled, an option can only match with one value.\n   *\n   * @param {Value} option The option to test.\n   * @param {Value} value The value to test against.\n   * @returns {boolean}\n   */\n  isOptionEqualToValue: PropTypes.func,\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   * @default -1\n   */\n  limitTags: integerPropType,\n  /**\n   * The component used to render the listbox.\n   * @default 'ul'\n   * @deprecated Use `slotProps.listbox.component` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  ListboxComponent: PropTypes.elementType,\n  /**\n   * Props applied to the Listbox element.\n   * @deprecated Use `slotProps.listbox` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  ListboxProps: PropTypes.object,\n  /**\n   * If `true`, the component is in a loading state.\n   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, for example `options` are empty).\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).\n   * @default 'Loading…'\n   */\n  loadingText: PropTypes.node,\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   * @default false\n   */\n  multiple: PropTypes.bool,\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).\n   * @default 'No options'\n   */\n  noOptionsText: PropTypes.node,\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {Value|Value[]} value The new value of the component.\n   * @param {string} reason One of \"createOption\", \"selectOption\", \"removeOption\", \"blur\" or \"clear\".\n   * @param {string} [details]\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"selectOption\"`, `\"removeOption\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {Value} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`, `\"touch\"`.\n   */\n  onHighlightChange: PropTypes.func,\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`, `\"blur\"`, `\"selectOption\"`, `\"removeOption\"`\n   */\n  onInputChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n  /**\n   * If `true`, the popup will open on input focus.\n   * @default false\n   */\n  openOnFocus: PropTypes.bool,\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).\n   * @default 'Open'\n   */\n  openText: PropTypes.string,\n  /**\n   * A list of options that will be shown in the Autocomplete.\n   */\n  options: PropTypes.array.isRequired,\n  /**\n   * The component used to render the body of the popup.\n   * @default Paper\n   * @deprecated Use `slots.paper` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  PaperComponent: PropTypes.elementType,\n  /**\n   * The component used to position the popup.\n   * @default Popper\n   * @deprecated Use `slots.popper` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  PopperComponent: PropTypes.elementType,\n  /**\n   * The icon to display in place of the default popup icon.\n   * @default <ArrowDropDownIcon />\n   */\n  popupIcon: PropTypes.node,\n  /**\n   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * Render the group.\n   *\n   * @param {AutocompleteRenderGroupParams} params The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {object} props The props to apply on the li element.\n   * @param {Value} option The option to render.\n   * @param {object} state The state of each option.\n   * @param {object} ownerState The state of the Autocomplete component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n  /**\n   * Render the selected value.\n   *\n   * @param {Value[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @param {object} ownerState The state of the Autocomplete component.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n  /**\n   * If `true`, the input's text is selected on focus.\n   * It helps the user clear the selected value.\n   * @default !props.freeSolo\n   */\n  selectOnFocus: PropTypes.bool,\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium']), PropTypes.string]),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes /* @typescript-to-proptypes-ignore */.shape({\n    chip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    clearIndicator: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    listbox: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    paper: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    popper: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    popupIndicator: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    listbox: PropTypes.elementType,\n    paper: PropTypes.elementType,\n    popper: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `isOptionEqualToValue` prop.\n   */\n  value: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.value !== undefined && !Array.isArray(props.value)) {\n      return new Error(['MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.', `However, ${props.value} was provided.`].join('\\n'));\n    }\n    return null;\n  })\n} : void 0;\nexport default Autocomplete;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAutocompleteUtilityClass(slot) {\n  return generateUtilityClass('MuiAutocomplete', slot);\n}\nconst autocompleteClasses = generateUtilityClasses('MuiAutocomplete', ['root', 'expanded', 'fullWidth', 'focused', 'focusVisible', 'tag', 'tagSizeSmall', 'tagSizeMedium', 'hasPopupIcon', 'hasClearIcon', 'inputRoot', 'input', 'inputFocused', 'endAdornment', 'clearIndicator', 'popupIndicator', 'popupIndicatorOpen', 'popper', 'popperDisablePortal', 'paper', 'listbox', 'loading', 'noOptions', 'option', 'groupLabel', 'groupUl']);\nexport default autocompleteClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport { getListSubheaderUtilityClass } from \"./listSubheaderClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    disableGutters,\n    inset,\n    disableSticky\n  } = ownerState;\n  const slots = {\n    root: ['root', color !== 'default' && `color${capitalize(color)}`, !disableGutters && 'gutters', inset && 'inset', !disableSticky && 'sticky']\n  };\n  return composeClasses(slots, getListSubheaderUtilityClass, classes);\n};\nconst ListSubheaderRoot = styled('li', {\n  name: 'MuiListSubheader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], !ownerState.disableGutters && styles.gutters, ownerState.inset && styles.inset, !ownerState.disableSticky && styles.sticky];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  boxSizing: 'border-box',\n  lineHeight: '48px',\n  listStyle: 'none',\n  color: (theme.vars || theme).palette.text.secondary,\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(14),\n  variants: [{\n    props: {\n      color: 'primary'\n    },\n    style: {\n      color: (theme.vars || theme).palette.primary.main\n    }\n  }, {\n    props: {\n      color: 'inherit'\n    },\n    style: {\n      color: 'inherit'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => !ownerState.disableGutters,\n    style: {\n      paddingLeft: 16,\n      paddingRight: 16\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.inset,\n    style: {\n      paddingLeft: 72\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => !ownerState.disableSticky,\n    style: {\n      position: 'sticky',\n      top: 0,\n      zIndex: 1,\n      backgroundColor: (theme.vars || theme).palette.background.paper\n    }\n  }]\n})));\nconst ListSubheader = /*#__PURE__*/React.forwardRef(function ListSubheader(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiListSubheader'\n  });\n  const {\n    className,\n    color = 'default',\n    component = 'li',\n    disableGutters = false,\n    disableSticky = false,\n    inset = false,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    color,\n    component,\n    disableGutters,\n    disableSticky,\n    inset\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListSubheaderRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nif (ListSubheader) {\n  ListSubheader.muiSkipListHighlight = true;\n}\nprocess.env.NODE_ENV !== \"production\" ? ListSubheader.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'default'\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary']),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the List Subheader will not have gutters.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, the List Subheader will not stick to the top during scroll.\n   * @default false\n   */\n  disableSticky: PropTypes.bool,\n  /**\n   * If `true`, the List Subheader is indented.\n   * @default false\n   */\n  inset: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListSubheader;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getListSubheaderUtilityClass(slot) {\n  return generateUtilityClass('MuiListSubheader', slot);\n}\nconst listSubheaderClasses = generateUtilityClasses('MuiListSubheader', ['root', 'colorPrimary', 'colorInherit', 'gutters', 'inset', 'sticky']);\nexport default listSubheaderClasses;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n *\n * Alias to `Clear`.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","'use client';\n\n/* eslint-disable no-constant-condition */\nimport * as React from 'react';\nimport { unstable_setRef as setRef, unstable_useEventCallback as useEventCallback, unstable_useControlled as useControlled, unstable_useId as useId, usePreviousProps } from '@mui/utils';\n\n// https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\nfunction stripDiacritics(string) {\n  return string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n}\nexport function createFilterOptions(config = {}) {\n  const {\n    ignoreAccents = true,\n    ignoreCase = true,\n    limit,\n    matchFrom = 'any',\n    stringify,\n    trim = false\n  } = config;\n  return (options, {\n    inputValue,\n    getOptionLabel\n  }) => {\n    let input = trim ? inputValue.trim() : inputValue;\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n    const filteredOptions = !input ? options : options.filter(option => {\n      let candidate = (stringify || getOptionLabel)(option);\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n      return matchFrom === 'start' ? candidate.startsWith(input) : candidate.includes(input);\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n}\nconst defaultFilterOptions = createFilterOptions();\n\n// Number of options to jump in list box when `Page Up` and `Page Down` keys are used.\nconst pageSize = 5;\nconst defaultIsActiveElementInListbox = listboxRef => listboxRef.current !== null && listboxRef.current.parentElement?.contains(document.activeElement);\nconst MULTIPLE_DEFAULT_VALUE = [];\nfunction useAutocomplete(props) {\n  const {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    unstable_isActiveElementInListbox = defaultIsActiveElementInListbox,\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    unstable_classNamePrefix = 'Mui',\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    componentName = 'useAutocomplete',\n    defaultValue = props.multiple ? MULTIPLE_DEFAULT_VALUE : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabled: disabledProp,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    filterOptions = defaultFilterOptions,\n    filterSelectedOptions = false,\n    freeSolo = false,\n    getOptionDisabled,\n    getOptionKey,\n    getOptionLabel: getOptionLabelProp = option => option.label ?? option,\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    isOptionEqualToValue = (option, value) => option === value,\n    multiple = false,\n    onChange,\n    onClose,\n    onHighlightChange,\n    onInputChange,\n    onOpen,\n    open: openProp,\n    openOnFocus = false,\n    options,\n    readOnly = false,\n    selectOnFocus = !props.freeSolo,\n    value: valueProp\n  } = props;\n  const id = useId(idProp);\n  let getOptionLabel = getOptionLabelProp;\n  getOptionLabel = option => {\n    const optionLabel = getOptionLabelProp(option);\n    if (typeof optionLabel !== 'string') {\n      if (process.env.NODE_ENV !== 'production') {\n        const erroneousReturn = optionLabel === undefined ? 'undefined' : `${typeof optionLabel} (${optionLabel})`;\n        console.error(`MUI: The \\`getOptionLabel\\` method of ${componentName} returned ${erroneousReturn} instead of a string for ${JSON.stringify(option)}.`);\n      }\n      return String(optionLabel);\n    }\n    return optionLabel;\n  };\n  const ignoreFocus = React.useRef(false);\n  const firstFocus = React.useRef(true);\n  const inputRef = React.useRef(null);\n  const listboxRef = React.useRef(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [focusedTag, setFocusedTag] = React.useState(-1);\n  const defaultHighlighted = autoHighlight ? 0 : -1;\n  const highlightedIndexRef = React.useRef(defaultHighlighted);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  });\n  const [inputValue, setInputValueState] = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  });\n  const [focused, setFocused] = React.useState(false);\n  const resetInputValue = React.useCallback((event, newValue, reason) => {\n    // retain current `inputValue` if new option isn't selected and `clearOnBlur` is false\n    // When `multiple` is enabled, `newValue` is an array of all selected items including the newly selected item\n    const isOptionSelected = multiple ? value.length < newValue.length : newValue !== null;\n    if (!isOptionSelected && !clearOnBlur) {\n      return;\n    }\n    let newInputValue;\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      const optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n    if (inputValue === newInputValue) {\n      return;\n    }\n    setInputValueState(newInputValue);\n    if (onInputChange) {\n      onInputChange(event, newInputValue, reason);\n    }\n  }, [getOptionLabel, inputValue, multiple, onInputChange, setInputValueState, clearOnBlur, value]);\n  const [open, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  });\n  const [inputPristine, setInputPristine] = React.useState(true);\n  const inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  const popupOpen = open && !readOnly;\n  const filteredOptions = popupOpen ? filterOptions(options.filter(option => {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(value2 => value2 !== null && isOptionEqualToValue(option, value2))) {\n      return false;\n    }\n    return true;\n  }),\n  // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue && inputPristine ? '' : inputValue,\n    getOptionLabel\n  }) : [];\n  const previousProps = usePreviousProps({\n    filteredOptions,\n    value,\n    inputValue\n  });\n  React.useEffect(() => {\n    const valueChange = value !== previousProps.value;\n    if (focused && !valueChange) {\n      return;\n    }\n\n    // Only reset the input's value when freeSolo if the component's value changes.\n    if (freeSolo && !valueChange) {\n      return;\n    }\n    resetInputValue(null, value, 'reset');\n  }, [value, resetInputValue, focused, previousProps.value, freeSolo]);\n  const listboxAvailable = open && filteredOptions.length > 0 && !readOnly;\n  const focusTag = useEventCallback(tagToFocus => {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(`[data-tag-index=\"${tagToFocus}\"]`).focus();\n    }\n  });\n\n  // Ensure the focusedTag is never inconsistent\n  React.useEffect(() => {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index < 0 || index >= filteredOptions.length) {\n      return -1;\n    }\n    let nextFocus = index;\n    while (true) {\n      const option = listboxRef.current.querySelector(`[data-option-index=\"${nextFocus}\"]`);\n\n      // Same logic as MenuList.js\n      const nextFocusDisabled = disabledItemsFocusable ? false : !option || option.disabled || option.getAttribute('aria-disabled') === 'true';\n      if (option && option.hasAttribute('tabindex') && !nextFocusDisabled) {\n        // The next option is available\n        return nextFocus;\n      }\n\n      // The next option is disabled, move to the next element.\n      // with looped index\n      if (direction === 'next') {\n        nextFocus = (nextFocus + 1) % filteredOptions.length;\n      } else {\n        nextFocus = (nextFocus - 1 + filteredOptions.length) % filteredOptions.length;\n      }\n\n      // We end up with initial index, that means we don't have available options.\n      // All of them are disabled\n      if (nextFocus === index) {\n        return -1;\n      }\n    }\n  }\n  const setHighlightedIndex = useEventCallback(({\n    event,\n    index,\n    reason = 'auto'\n  }) => {\n    highlightedIndexRef.current = index;\n\n    // does the index exist?\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', `${id}-option-${index}`);\n    }\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n    if (!listboxRef.current) {\n      return;\n    }\n    const prev = listboxRef.current.querySelector(`[role=\"option\"].${unstable_classNamePrefix}-focused`);\n    if (prev) {\n      prev.classList.remove(`${unstable_classNamePrefix}-focused`);\n      prev.classList.remove(`${unstable_classNamePrefix}-focusVisible`);\n    }\n    let listboxNode = listboxRef.current;\n    if (listboxRef.current.getAttribute('role') !== 'listbox') {\n      listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]');\n    }\n\n    // \"No results\"\n    if (!listboxNode) {\n      return;\n    }\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n    const option = listboxRef.current.querySelector(`[data-option-index=\"${index}\"]`);\n    if (!option) {\n      return;\n    }\n    option.classList.add(`${unstable_classNamePrefix}-focused`);\n    if (reason === 'keyboard') {\n      option.classList.add(`${unstable_classNamePrefix}-focusVisible`);\n    }\n\n    // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/WAI/content-assets/wai-aria-practices/patterns/combobox/examples/js/select-only.js\n    // In case of mouse clicks and touch (in mobile devices) we avoid scrolling the element and keep both behaviors same.\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse' && reason !== 'touch') {\n      const element = option;\n      const scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      const elementBottom = element.offsetTop + element.offsetHeight;\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  const changeHighlightedIndex = useEventCallback(({\n    event,\n    diff,\n    direction = 'next',\n    reason = 'auto'\n  }) => {\n    if (!popupOpen) {\n      return;\n    }\n    const getNextIndex = () => {\n      const maxIndex = filteredOptions.length - 1;\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n      if (diff === 'start') {\n        return 0;\n      }\n      if (diff === 'end') {\n        return maxIndex;\n      }\n      const newIndex = highlightedIndexRef.current + diff;\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n        return maxIndex;\n      }\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n        return 0;\n      }\n      return newIndex;\n    };\n    const nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason,\n      event\n    });\n\n    // Sync the content of the input with the highlighted option.\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        const option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option;\n\n        // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n        const index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  const getPreviousHighlightedOptionIndex = () => {\n    const isSameValue = (value1, value2) => {\n      const label1 = value1 ? getOptionLabel(value1) : '';\n      const label2 = value2 ? getOptionLabel(value2) : '';\n      return label1 === label2;\n    };\n    if (highlightedIndexRef.current !== -1 && previousProps.filteredOptions && previousProps.filteredOptions.length !== filteredOptions.length && previousProps.inputValue === inputValue && (multiple ? value.length === previousProps.value.length && previousProps.value.every((val, i) => getOptionLabel(value[i]) === getOptionLabel(val)) : isSameValue(previousProps.value, value))) {\n      const previousHighlightedOption = previousProps.filteredOptions[highlightedIndexRef.current];\n      if (previousHighlightedOption) {\n        return filteredOptions.findIndex(option => {\n          return getOptionLabel(option) === getOptionLabel(previousHighlightedOption);\n        });\n      }\n    }\n    return -1;\n  };\n  const syncHighlightedIndex = React.useCallback(() => {\n    if (!popupOpen) {\n      return;\n    }\n\n    // Check if the previously highlighted option still exists in the updated filtered options list and if the value and inputValue haven't changed\n    // If it exists and the value and the inputValue haven't changed, just update its index, otherwise continue execution\n    const previousHighlightedOptionIndex = getPreviousHighlightedOptionIndex();\n    if (previousHighlightedOptionIndex !== -1) {\n      highlightedIndexRef.current = previousHighlightedOptionIndex;\n      return;\n    }\n    const valueItem = multiple ? value[0] : value;\n\n    // The popup is empty, reset\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n    if (!listboxRef.current) {\n      return;\n    }\n\n    // Synchronize the value with the highlighted index\n    if (valueItem != null) {\n      const currentOption = filteredOptions[highlightedIndexRef.current];\n\n      // Keep the current highlighted index if possible\n      if (multiple && currentOption && value.findIndex(val => isOptionEqualToValue(currentOption, val)) !== -1) {\n        return;\n      }\n      const itemIndex = filteredOptions.findIndex(optionItem => isOptionEqualToValue(optionItem, valueItem));\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n      return;\n    }\n\n    // Prevent the highlighted index to leak outside the boundaries.\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    }\n\n    // Restore the focus to the previous index.\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    });\n    // Ignore filteredOptions (and options, isOptionEqualToValue, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n  // Only sync the highlighted index when the option switch between empty and not\n  filteredOptions.length,\n  // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  const handleListboxRef = useEventCallback(node => {\n    setRef(listboxRef, node);\n    if (!node) {\n      return;\n    }\n    syncHighlightedIndex();\n  });\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!inputRef.current || inputRef.current.nodeName !== 'INPUT') {\n        if (inputRef.current && inputRef.current.nodeName === 'TEXTAREA') {\n          console.warn([`A textarea element was provided to ${componentName} where input was expected.`, `This is not a supported scenario but it may work under certain conditions.`, `A textarea keyboard navigation may conflict with Autocomplete controls (for example enter and arrow keys).`, `Make sure to test keyboard navigation and add custom event handlers if necessary.`].join('\\n'));\n        } else {\n          console.error([`MUI: Unable to find the input element. It was resolved to ${inputRef.current} while an HTMLInputElement was expected.`, `Instead, ${componentName} expects an input element.`, '', componentName === 'useAutocomplete' ? 'Make sure you have bound getInputProps correctly and that the normal ref/effect resolutions order is guaranteed.' : 'Make sure you have customized the input component correctly.'].join('\\n'));\n        }\n      }\n    }, [componentName]);\n  }\n  React.useEffect(() => {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n  const handleOpen = event => {\n    if (open) {\n      return;\n    }\n    setOpenState(true);\n    setInputPristine(true);\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n  const handleClose = (event, reason) => {\n    if (!open) {\n      return;\n    }\n    setOpenState(false);\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n  const handleValue = (event, newValue, reason, details) => {\n    if (multiple) {\n      if (value.length === newValue.length && value.every((val, i) => val === newValue[i])) {\n        return;\n      }\n    } else if (value === newValue) {\n      return;\n    }\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n    setValueState(newValue);\n  };\n  const isTouch = React.useRef(false);\n  const selectNewValue = (event, option, reasonProp = 'selectOption', origin = 'options') => {\n    let reason = reasonProp;\n    let newValue = option;\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n      if (process.env.NODE_ENV !== 'production') {\n        const matches = newValue.filter(val => isOptionEqualToValue(option, val));\n        if (matches.length > 1) {\n          console.error([`MUI: The \\`isOptionEqualToValue\\` method of ${componentName} does not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${matches.length} matches.`].join('\\n'));\n        }\n      }\n      const itemIndex = newValue.findIndex(valueItem => isOptionEqualToValue(option, valueItem));\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'removeOption';\n      }\n    }\n    resetInputValue(event, newValue, reason);\n    handleValue(event, newValue, reason, {\n      option\n    });\n    if (!disableCloseOnSelect && (!event || !event.ctrlKey && !event.metaKey)) {\n      handleClose(event, reason);\n    }\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n    let nextFocus = index;\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n      const option = anchorEl.querySelector(`[data-tag-index=\"${nextFocus}\"]`);\n\n      // Same logic as MenuList.js\n      if (!option || !option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true') {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n  const handleFocusTag = (event, direction) => {\n    if (!multiple) {\n      return;\n    }\n    if (inputValue === '') {\n      handleClose(event, 'toggleInput');\n    }\n    let nextTag = focusedTag;\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n  const handleClear = event => {\n    ignoreFocus.current = true;\n    setInputValueState('');\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n  const handleKeyDown = other => event => {\n    if (other.onKeyDown) {\n      other.onKeyDown(event);\n    }\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    if (focusedTag !== -1 && !['ArrowLeft', 'ArrowRight'].includes(event.key)) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n\n    // Wait until IME is settled.\n    if (event.which !== 229) {\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'start',\n              direction: 'next',\n              reason: 'keyboard',\n              event\n            });\n          }\n          break;\n        case 'End':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'end',\n              direction: 'previous',\n              reason: 'keyboard',\n              event\n            });\n          }\n          break;\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -pageSize,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: pageSize,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 1,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -1,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n        case 'Enter':\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            const option = filteredOptions[highlightedIndexRef.current];\n            const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n\n            // Avoid early form validation, let the end-users continue filling the form.\n            event.preventDefault();\n            if (disabled) {\n              return;\n            }\n            selectNewValue(event, option, 'selectOption');\n\n            // Move the selection to the end.\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n            selectNewValue(event, inputValue, 'createOption', 'freeSolo');\n          }\n          break;\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault();\n            // Avoid the Modal to handle the event.\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault();\n            // Avoid the Modal to handle the event.\n            event.stopPropagation();\n            handleClear(event);\n          }\n          break;\n        case 'Backspace':\n          // Remove the value on the left of the \"cursor\"\n          if (multiple && !readOnly && inputValue === '' && value.length > 0) {\n            const index = focusedTag === -1 ? value.length - 1 : focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n          break;\n        case 'Delete':\n          // Remove the value on the right of the \"cursor\"\n          if (multiple && !readOnly && inputValue === '' && value.length > 0 && focusedTag !== -1) {\n            const index = focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n          break;\n        default:\n      }\n    }\n  };\n  const handleFocus = event => {\n    setFocused(true);\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n  const handleBlur = event => {\n    // Ignore the event when using the scrollbar with IE11\n    if (unstable_isActiveElementInListbox(listboxRef)) {\n      inputRef.current.focus();\n      return;\n    }\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value, 'blur');\n    }\n    handleClose(event, 'blur');\n  };\n  const handleInputChange = event => {\n    const newValue = event.target.value;\n    if (inputValue !== newValue) {\n      setInputValueState(newValue);\n      setInputPristine(false);\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n  const handleOptionMouseMove = event => {\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\n    if (highlightedIndexRef.current !== index) {\n      setHighlightedIndex({\n        event,\n        index,\n        reason: 'mouse'\n      });\n    }\n  };\n  const handleOptionTouchStart = event => {\n    setHighlightedIndex({\n      event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'touch'\n    });\n    isTouch.current = true;\n  };\n  const handleOptionClick = event => {\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'selectOption');\n    isTouch.current = false;\n  };\n  const handleTagDelete = index => event => {\n    const newValue = value.slice();\n    newValue.splice(index, 1);\n    handleValue(event, newValue, 'removeOption', {\n      option: value[index]\n    });\n  };\n  const handlePopupIndicator = event => {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  // Prevent input blur when interacting with the combobox\n  const handleMouseDown = event => {\n    // Prevent focusing the input if click is anywhere outside the Autocomplete\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    }\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  };\n\n  // Focus the input when interacting with the combobox\n  const handleClick = event => {\n    // Prevent focusing the input if click is anywhere outside the Autocomplete\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    }\n    inputRef.current.focus();\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n    firstFocus.current = false;\n  };\n  const handleInputMouseDown = event => {\n    if (!disabledProp && (inputValue === '' || !open)) {\n      handlePopupIndicator(event);\n    }\n  };\n  let dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  let groupedOptions = filteredOptions;\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    const indexBy = new Map();\n    let warn = false;\n    groupedOptions = filteredOptions.reduce((acc, option, index) => {\n      const group = groupBy(option);\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(`MUI: The options provided combined with the \\`groupBy\\` method of ${componentName} returns duplicated headers.`, 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n          indexBy.set(group, true);\n        }\n        acc.push({\n          key: index,\n          index,\n          group,\n          options: [option]\n        });\n      }\n      return acc;\n    }, []);\n  }\n  if (disabledProp && focused) {\n    handleBlur();\n  }\n  return {\n    getRootProps: (other = {}) => ({\n      'aria-owns': listboxAvailable ? `${id}-listbox` : null,\n      ...other,\n      onKeyDown: handleKeyDown(other),\n      onMouseDown: handleMouseDown,\n      onClick: handleClick\n    }),\n    getInputLabelProps: () => ({\n      id: `${id}-label`,\n      htmlFor: id\n    }),\n    getInputProps: () => ({\n      id,\n      value: inputValue,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      onChange: handleInputChange,\n      onMouseDown: handleInputMouseDown,\n      // if open then this is handled imperatively so don't let react override\n      // only have an opinion about this when closed\n      'aria-activedescendant': popupOpen ? '' : null,\n      'aria-autocomplete': autoComplete ? 'both' : 'list',\n      'aria-controls': listboxAvailable ? `${id}-listbox` : undefined,\n      'aria-expanded': listboxAvailable,\n      // Disable browser's suggestion that might overlap with the popup.\n      // Handle autocomplete but not autofill.\n      autoComplete: 'off',\n      ref: inputRef,\n      autoCapitalize: 'none',\n      spellCheck: 'false',\n      role: 'combobox',\n      disabled: disabledProp\n    }),\n    getClearProps: () => ({\n      tabIndex: -1,\n      type: 'button',\n      onClick: handleClear\n    }),\n    getPopupIndicatorProps: () => ({\n      tabIndex: -1,\n      type: 'button',\n      onClick: handlePopupIndicator\n    }),\n    getTagProps: ({\n      index\n    }) => ({\n      key: index,\n      'data-tag-index': index,\n      tabIndex: -1,\n      ...(!readOnly && {\n        onDelete: handleTagDelete(index)\n      })\n    }),\n    getListboxProps: () => ({\n      role: 'listbox',\n      id: `${id}-listbox`,\n      'aria-labelledby': `${id}-label`,\n      ref: handleListboxRef,\n      onMouseDown: event => {\n        // Prevent blur\n        event.preventDefault();\n      }\n    }),\n    getOptionProps: ({\n      index,\n      option\n    }) => {\n      const selected = (multiple ? value : [value]).some(value2 => value2 != null && isOptionEqualToValue(option, value2));\n      const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: getOptionKey?.(option) ?? getOptionLabel(option),\n        tabIndex: -1,\n        role: 'option',\n        id: `${id}-option-${index}`,\n        onMouseMove: handleOptionMouseMove,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id,\n    inputValue,\n    value,\n    dirty,\n    expanded: popupOpen && anchorEl,\n    popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl,\n    setAnchorEl,\n    focusedTag,\n    groupedOptions\n  };\n}\nexport default useAutocomplete;","'use client';\n\nimport * as React from 'react';\nconst usePreviousProps = value => {\n  const ref = React.useRef({});\n  React.useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\nexport default usePreviousProps;"],"names":["_excluded","_excluded2","_excluded3","_excluded4","_ClearIcon","_ArrowDropDownIcon","AutocompleteRoot","styled","name","slot","overridesResolver","props","styles","ownerState","fullWidth","hasClearIcon","hasPopupIcon","inputFocused","size","concat","autocompleteClasses","tag","capitalize","inputRoot","input","root","focused","clearIndicator","visibility","margin","maxWidth","paddingRight","width","minWidth","inputClasses","paddingBottom","padding","inputBaseClasses","sizeSmall","outlinedInputClasses","endAdornment","right","paddingTop","paddingLeft","filledInputClasses","hiddenLabel","flexGrow","textOverflow","opacity","variants","style","multiple","flexWrap","AutocompleteEndAdornment","position","top","transform","AutocompleteClearIndicator","IconButton","marginRight","AutocompletePopupIndicator","popupIndicator","popupOpen","popupIndicatorOpen","AutocompletePopper","Popper","option","popper","disablePortal","popperDisablePortal","memoTheme","_ref","theme","zIndex","vars","modal","AutocompletePaper","Paper","paper","_ref2","_objectSpread","typography","body1","overflow","AutocompleteLoading","loading","_ref3","color","palette","text","secondary","AutocompleteNoOptions","noOptions","_ref4","AutocompleteListbox","listbox","_ref5","listStyle","maxHeight","minHeight","display","justifyContent","alignItems","cursor","boxSizing","outline","WebkitTapHighlightColor","breakpoints","up","backgroundColor","action","hover","disabledOpacity","pointerEvents","focusVisible","focus","primary","mainChannel","selectedOpacity","alpha","main","hoverOpacity","selected","focusOpacity","AutocompleteGroupLabel","ListSubheader","groupLabel","_ref6","background","AutocompleteGroupUl","groupUl","React","inProps","ref","useDefaultProps","autoComplete","autoHighlight","autoSelect","blurOnSelect","ChipProps","ChipPropsProp","className","clearIcon","_jsx","ClearIcon","fontSize","clearOnBlur","freeSolo","clearOnEscape","clearText","closeText","componentsProps","defaultValue","disableClearable","disableCloseOnSelect","disabled","disabledItemsFocusable","disableListWrap","filterOptions","filterSelectedOptions","forcePopupIcon","getLimitTagsText","more","getOptionDisabled","getOptionKey","getOptionLabel","getOptionLabelProp","isOptionEqualToValue","groupBy","handleHomeEndKeys","id","idProp","includeInputInList","inputValue","inputValueProp","limitTags","ListboxComponent","ListboxComponentProp","ListboxProps","ListboxPropsProp","loadingText","noOptionsText","onChange","onClose","onHighlightChange","onInputChange","onOpen","open","openOnFocus","openText","options","PaperComponent","PaperComponentProp","PopperComponent","PopperComponentProp","popupIcon","ArrowDropDownIcon","readOnly","renderGroup","renderGroupProp","renderInput","renderOption","renderOptionProp","renderTags","selectOnFocus","slots","slotProps","value","valueProp","other","_objectWithoutProperties","getRootProps","getInputProps","getInputLabelProps","getPopupIndicatorProps","getClearProps","getTagProps","getListboxProps","getOptionProps","dirty","expanded","focusedTag","anchorEl","setAnchorEl","groupedOptions","useAutocomplete","componentName","onMouseDown","handleInputMouseDown","_getListboxProps","listboxRef","otherListboxProps","_option$label","label","classes","composeClasses","getAutocompleteUtilityClass","useUtilityClasses","externalForwardedProps","chip","ListboxSlot","listboxProps","useSlot","elementType","additionalProps","PaperSlot","paperProps","PopperSlot","popperProps","clientWidth","role","startAdornment","length","getCustomizedTagProps","params","map","index","_getCustomizedTagProp","key","customTagProps","Chip","Array","isArray","splice","push","children","_jsxs","component","group","defaultRenderOption","props2","otherProps","renderListOption","optionProps","clearIndicatorSlotProps","popupIndicatorSlotProps","clsx","undefined","InputLabelProps","InputProps","event","target","currentTarget","title","inputProps","as","preventDefault","option2","index2","generateUtilityClass","generateUtilityClasses","ListSubheaderRoot","disableGutters","gutters","inset","disableSticky","sticky","lineHeight","fontFamily","fontWeight","fontWeightMedium","pxToRem","getListSubheaderUtilityClass","muiSkipListHighlight","createSvgIcon","d","stripDiacritics","string","normalize","replace","createFilterOptions","config","arguments","ignoreAccents","ignoreCase","limit","matchFrom","stringify","trim","toLowerCase","filteredOptions","filter","candidate","startsWith","includes","slice","defaultFilterOptions","defaultIsActiveElementInListbox","_listboxRef$current$p","current","parentElement","contains","document","activeElement","MULTIPLE_DEFAULT_VALUE","unstable_isActiveElementInListbox","unstable_classNamePrefix","disabledProp","openProp","useId","optionLabel","String","ignoreFocus","firstFocus","inputRef","setFocusedTag","defaultHighlighted","highlightedIndexRef","setValueState","useControlled","controlled","default","setInputValueState","state","setFocused","resetInputValue","newValue","reason","newInputValue","setOpenState","inputPristine","setInputPristine","inputValueIsSelectedValue","some","value2","previousProps","usePreviousProps","valueChange","listboxAvailable","focusTag","useEventCallback","tagToFocus","querySelector","setHighlightedIndex","removeAttribute","setAttribute","prev","classList","remove","listboxNode","getAttribute","scrollTop","add","scrollHeight","clientHeight","element","scrollBottom","elementBottom","offsetTop","offsetHeight","changeHighlightedIndex","diff","direction","nextIndex","nextFocus","nextFocusDisabled","hasAttribute","validOptionIndex","getNextIndex","maxIndex","newIndex","Math","abs","indexOf","setSelectionRange","syncHighlightedIndex","previousHighlightedOptionIndex","getPreviousHighlightedOptionIndex","every","val","i","value1","previousHighlightedOption","findIndex","isSameValue","valueItem","currentOption","itemIndex","optionItem","handleListboxRef","node","setRef","handleOpen","handleClose","handleValue","details","isTouch","selectNewValue","origin","ctrlKey","metaKey","blur","handleFocusTag","nextTag","validTagIndex","handleClear","handleKeyDown","onKeyDown","defaultMuiPrevented","which","stopPropagation","handleFocus","handleBlur","handleInputChange","handleOptionMouseMove","Number","handleOptionTouchStart","handleOptionClick","handleTagDelete","handlePopupIndicator","handleMouseDown","handleClick","selectionEnd","selectionStart","select","Map","reduce","acc","onClick","htmlFor","onBlur","onFocus","autoCapitalize","spellCheck","tabIndex","type","onDelete","_getOptionKey","onMouseMove","onTouchStart"],"sourceRoot":""}